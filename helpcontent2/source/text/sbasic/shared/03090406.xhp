<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRUNTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRUNTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************--><helpdocument version="1.0">
<meta>
<topic id="textsbasicshared03090406xml" indexer="include" status="PUBLISH">
<title xml-lang="en-US" id="tit">Function Statement [Runtime]</title>
<filename>/text/sbasic/shared/03090406.xhp</filename>
</topic>
<history>
<created date="2003-10-31T00:00:00">Sun Microsystems, Inc.</created>
<lastedited date="2003-10-31T00:00:00">converted from old format - fpe</lastedited>
</history>
</meta>
<body>
  
  
  <section id="function">
  <bookmark xml-lang="en-US" branch="index" id="bm_id3153346"><bookmark_value>Function;statement</bookmark_value></bookmark><paragraph id="hd_id3153346" role="heading" level="1" oldref="1" l10n="U" xml-lang="en-US"><link href="text/sbasic/shared/03090406.xhp" name="Function Statement [Runtime]">Function Statement [Runtime]</link></paragraph>
  <paragraph role="paragraph" id="par_id3159158" l10n="U" xml-lang="en-US" oldref="2">Defines a subroutine that can be used as an expression to determine a return type.</paragraph>
  </section>
  <paragraph role="heading" level="2" id="hd_id3145316" l10n="U" xml-lang="en-US" oldref="3">Syntax</paragraph>
  <paragraph role="paragraph" id="par_id3148944" l10n="U" xml-lang="en-US" oldref="4">see Parameter</paragraph>
  <paragraph role="heading" level="2" id="hd_id3154760" l10n="U" xml-lang="en-US" oldref="5">Parameters:</paragraph>
  <paragraph role="paragraph" id="par_id3156344" l10n="U" xml-lang="en-US" oldref="6">Syntax</paragraph>
  <paragraph role="paragraph" id="par_id3149457" l10n="U" xml-lang="en-US" oldref="7">Function Name[(VarName1 [As Type][, VarName2 [As Type][,...]]]) [As Type]</paragraph>
  <paragraph role="paragraph" id="par_id3153360" l10n="U" xml-lang="en-US" oldref="8">statement block</paragraph>
  <paragraph role="paragraph" id="par_id3148797" l10n="U" xml-lang="en-US" oldref="9">[Exit Function]</paragraph>
  <paragraph role="paragraph" id="par_id3145419" l10n="U" xml-lang="en-US" oldref="10">statement block</paragraph>
  <paragraph role="paragraph" id="par_id3150449" l10n="U" xml-lang="en-US" oldref="11">End Function</paragraph>
  <paragraph role="paragraph" id="par_id3156281" l10n="U" xml-lang="en-US" oldref="12">Parameter</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3153193" xml-lang="en-US" oldref="13"><emph>Name:</emph> Name of the subroutine to contain the value returned by the function.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3147229" xml-lang="en-US" oldref="14"><emph>VarName:</emph> Parameter to be passed to the subroutine.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3147287" xml-lang="en-US" oldref="15"><emph>Type:</emph> Type-declaration keyword.</paragraph>
  <paragraph role="heading" level="2" id="hd_id3163710" l10n="U" xml-lang="en-US" oldref="16">Example:</paragraph>
  <paragraph role="paragraph" id="par_id3147214" l10n="U" xml-lang="en-US" oldref="17">Sub ExampleExit</paragraph>
  <paragraph role="paragraph" id="par_id3152596" l10n="U" xml-lang="en-US" oldref="18">Dim sReturn As String</paragraph>
  <paragraph role="paragraph" id="par_id3153364" l10n="U" xml-lang="en-US" oldref="19">Dim sListArray(10) as String</paragraph>
  <paragraph role="paragraph" id="par_id3149481" l10n="U" xml-lang="en-US" oldref="20">Dim siStep as Single</paragraph>
  <paragraph role="paragraph" id="par_id3152939" l10n="U" xml-lang="en-US" oldref="21">For siStep = 0 to 10  REM Fill array with test data</paragraph>
  <paragraph role="paragraph" id="par_id3147349" l10n="U" xml-lang="en-US" oldref="22">sListArray(siStep) = chr$(siStep + 65)</paragraph>
  <paragraph role="paragraph" id="par_id3147426" l10n="U" xml-lang="en-US" oldref="23">msgbox sListArray(siStep)</paragraph>
  <paragraph role="paragraph" id="par_id3152576" l10n="U" xml-lang="en-US" oldref="24">next siStep</paragraph>
  <paragraph role="paragraph" id="par_id3146922" l10n="U" xml-lang="en-US" oldref="25">sReturn = LinSearch(sListArray(), &quot;B&quot;)</paragraph>
  <paragraph role="paragraph" id="par_id3153140" l10n="U" xml-lang="en-US" oldref="26">Print sReturn</paragraph>
  <paragraph role="paragraph" id="par_id3149581" l10n="U" xml-lang="en-US" oldref="27">end sub</paragraph>
  
  
  <paragraph role="paragraph" id="par_id3154790" l10n="U" xml-lang="en-US" oldref="30">Function LinSearch( sList(), sItem As String ) as integer</paragraph>
  <paragraph role="paragraph" id="par_id3150594" l10n="U" xml-lang="en-US" oldref="31">dim iCount as Integer</paragraph>
  <paragraph role="paragraph" id="par_id3154943" l10n="U" xml-lang="en-US" oldref="32">REM Linsearch searches a TextArray:sList() for a TextEntry:</paragraph>
  <paragraph role="paragraph" id="par_id3155601" l10n="U" xml-lang="en-US" oldref="33">REM Return value is the index of the entry or 0 (Null)</paragraph>
  <paragraph role="paragraph" id="par_id3154511" l10n="U" xml-lang="en-US" oldref="34">for iCount=1 to Ubound( sList() )</paragraph>
  <paragraph role="paragraph" id="par_id3149123" l10n="U" xml-lang="en-US" oldref="35">if sList( iCount ) = sItem then</paragraph>
  <paragraph role="paragraph" id="par_id3153707" l10n="U" xml-lang="en-US" oldref="36">exit for REM sItem found</paragraph>
  <paragraph role="paragraph" id="par_id3155066" l10n="U" xml-lang="en-US" oldref="37">end if</paragraph>
  <paragraph role="paragraph" id="par_id3156275" l10n="U" xml-lang="en-US" oldref="38">next iCount</paragraph>
  <paragraph role="paragraph" id="par_id3156054" l10n="U" xml-lang="en-US" oldref="39">if iCount = Ubound( sList() ) then iCount = 0</paragraph>
  <paragraph role="paragraph" id="par_id3153765" l10n="U" xml-lang="en-US" oldref="40">LinSearch = iCount</paragraph>
  <paragraph role="paragraph" id="par_id3153713" l10n="U" xml-lang="en-US" oldref="41">end function</paragraph>
 </body>
</helpdocument>
