<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRUNTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRUNTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************-->
<helpdocument version="1.0">
<meta>
<topic id="textsbasicshared03090412xml" indexer="include" status="PUBLISH">
<title xml-lang="en-US" id="tit">Exit Statement [Runtime]</title>
<filename>/text/sbasic/shared/03090412.xhp</filename>
</topic>
<history>
<created date="2003-10-31T00:00:00">Sun Microsystems, Inc.</created>
<lastedited date="2003-10-31T00:00:00">converted from old format - fpe</lastedited>
</history>
</meta>
<body>
  
  
  <section id="exit">
  <bookmark xml-lang="en-US" branch="index" id="bm_id3152924"><bookmark_value>Exit;statement</bookmark_value></bookmark><paragraph id="hd_id3152924" role="heading" level="1" oldref="1" l10n="U" xml-lang="en-US"><link href="text/sbasic/shared/03090412.xhp" name="Exit Statement [Runtime]">Exit Statement [Runtime]</link></paragraph>
  <paragraph xml-lang="en-US" oldref="2" role="paragraph" id="par_id3153394" l10n="U">Exits a <emph>Do...Loop</emph>, <emph>For...Next</emph>, a function, or a subroutine.</paragraph>
  </section>
  <paragraph role="heading" level="2" id="hd_id3149763" l10n="U" xml-lang="en-US" oldref="3">Syntax:</paragraph>
  <paragraph role="paragraph" id="par_id3159157" l10n="U" xml-lang="en-US" oldref="4">see Parameters</paragraph>
  <paragraph role="heading" level="2" id="hd_id3148943" l10n="U" xml-lang="en-US" oldref="5">Parameters:</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3154760" xml-lang="en-US" oldref="6"><emph>Exit Do</emph></paragraph>
  <paragraph xml-lang="en-US" oldref="7" role="paragraph" id="par_id3147559" l10n="U">Only valid within a <emph>Do...Loop</emph> statement to exit the loop. Program execution continues with the statement that follows the Loop statement. If <emph>Do...Loop</emph> statements are nested, the control is transferred to the loop in the next higher level.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3150398" xml-lang="en-US" oldref="8"><emph>Exit For</emph></paragraph>
  <paragraph xml-lang="en-US" oldref="9" role="paragraph" id="par_id3148797" l10n="U">Only valid within a <emph>For...Next</emph> loop to exit the loop. Program execution continues with the first statement that follows the <emph>Next</emph> statement. In nested statements, the control is transferred to the loop in the next higher level.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3147229" xml-lang="en-US" oldref="10"><emph>Exit Function</emph></paragraph>
  <paragraph xml-lang="en-US" oldref="11" role="paragraph" id="par_id3154685" l10n="U">Exits the <emph>Function</emph> procedure immediately. Program execution continues with the statement that follows the <emph>Function</emph> call.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3155132" xml-lang="en-US" oldref="12"><emph>Exit Sub</emph></paragraph>
  <paragraph xml-lang="en-US" role="paragraph" id="par_id3149561" l10n="U" oldref="13">Exits the subroutine immediately. Program execution continues with the statement that follows the <emph>Sub</emph> call.</paragraph>
  <paragraph role="note" id="par_id3153143" l10n="U" xml-lang="en-US" oldref="14">The Exit statement does not define the end of a structure, and must not be confused with the End statement.</paragraph>
  <paragraph role="heading" level="2" id="hd_id3147348" l10n="U" xml-lang="en-US" oldref="15">Example:</paragraph>
  <paragraph role="paragraph" id="par_id3151113" l10n="U" xml-lang="en-US" oldref="16">Sub ExampleExit</paragraph>
  <paragraph role="paragraph" id="par_id3156283" l10n="U" xml-lang="en-US" oldref="17">Dim sReturn As String</paragraph>
  <paragraph role="paragraph" id="par_id3147125" l10n="U" xml-lang="en-US" oldref="18">Dim sListArray(10) as String</paragraph>
  <paragraph role="paragraph" id="par_id3151073" l10n="U" xml-lang="en-US" oldref="19">Dim siStep as Single</paragraph>
  <paragraph role="paragraph" id="par_id3153158" l10n="U" xml-lang="en-US" oldref="20">For siStep = 0 to 10  REM Fill array with test data</paragraph>
  <paragraph role="paragraph" id="par_id3148457" l10n="U" xml-lang="en-US" oldref="21">sListArray(siStep) = chr(siStep + 65)</paragraph>
  <paragraph role="paragraph" id="par_id3154492" l10n="U" xml-lang="en-US" oldref="22">msgbox sListArray(siStep)</paragraph>
  <paragraph role="paragraph" id="par_id3154791" l10n="U" xml-lang="en-US" oldref="23">next siStep</paragraph>
  <paragraph role="paragraph" id="par_id3153510" l10n="U" xml-lang="en-US" oldref="24">sReturn = LinSearch(sListArray(), "B")</paragraph>
  <paragraph role="paragraph" id="par_id3154513" l10n="U" xml-lang="en-US" oldref="25">Print sReturn</paragraph>
  <paragraph role="paragraph" id="par_id3149121" l10n="U" xml-lang="en-US" oldref="26">end sub</paragraph>
  
  
  <paragraph role="paragraph" id="par_id3152962" l10n="U" xml-lang="en-US" oldref="29">Function LinSearch( sList(), sItem As String ) as integer</paragraph>
  <paragraph role="paragraph" id="par_id3154755" l10n="U" xml-lang="en-US" oldref="30">dim iCount as Integer</paragraph>
  <paragraph role="paragraph" id="par_id3153764" l10n="U" xml-lang="en-US" oldref="31">REM LinSearch searches a TextArray:sList() for  a TextEntry:</paragraph>
  <paragraph role="paragraph" id="par_id3148995" l10n="U" xml-lang="en-US" oldref="32">REM Returns the index of the entry or 0 ( Null)</paragraph>
  <paragraph role="paragraph" id="par_id3156057" l10n="U" xml-lang="en-US" oldref="33">for iCount=1 to Ubound( sList() )</paragraph>
  <paragraph role="paragraph" id="par_id3159266" l10n="U" xml-lang="en-US" oldref="34">if sList( iCount ) = sItem then</paragraph>
  <paragraph role="paragraph" id="par_id3149567" l10n="U" xml-lang="en-US" oldref="35">Exit for REM sItem found</paragraph>
  <paragraph role="paragraph" id="par_id3147343" l10n="U" xml-lang="en-US" oldref="36">end if</paragraph>
  <paragraph role="paragraph" id="par_id3155174" l10n="U" xml-lang="en-US" oldref="37">next iCount</paragraph>
  <paragraph role="paragraph" id="par_id3146313" l10n="U" xml-lang="en-US" oldref="38">if iCount = Ubound( sList() ) then iCount = 0</paragraph>
  <paragraph role="paragraph" id="par_id3166448" l10n="U" xml-lang="en-US" oldref="39">LinSearch = iCount</paragraph>
  <paragraph role="paragraph" id="par_id3146916" l10n="U" xml-lang="en-US" oldref="40">end function</paragraph>
  
  
 </body>
</helpdocument>
