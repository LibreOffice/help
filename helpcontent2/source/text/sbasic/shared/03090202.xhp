<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRUNTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRUNTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************--><helpdocument version="1.0">
<meta>
<topic id="textsbasicshared03090202xml" indexer="include" status="PUBLISH">
<title xml-lang="en-US" id="tit">For...Next Statement [Runtime]</title>
<filename>/text/sbasic/shared/03090202.xhp</filename>
</topic>
<history>
<created date="2003-10-31T00:00:00">Sun Microsystems, Inc.</created>
<lastedited date="2003-10-31T00:00:00">converted from old format - fpe</lastedited>
</history>
</meta>
<body>
  
  
  <section id="fornext">
  <bookmark id="bm_id3149205" branch="index" xml-lang="en-US"><bookmark_value>For;statement</bookmark_value><bookmark_value>To;statement</bookmark_value><bookmark_value>Step;statement</bookmark_value><bookmark_value>Next;statement</bookmark_value></bookmark><paragraph id="hd_id3149205" role="heading" level="1" oldref="1" l10n="U" xml-lang="en-US"><link href="text/sbasic/shared/03090202.xhp" name="For...Next Statement [Runtime]">For...Next Statement [Runtime]</link></paragraph>
  <paragraph role="paragraph" id="par_id3143267" l10n="U" xml-lang="en-US" oldref="2">Repeats the statements between the For...Next block a specified number of times.</paragraph>
  </section>
  <paragraph role="heading" level="2" id="hd_id3156153" l10n="U" xml-lang="en-US" oldref="3">Syntax:</paragraph>
  <paragraph role="paragraph" id="par_id3148473" l10n="U" xml-lang="en-US" oldref="4">For counter=start To end [Step step]</paragraph>
  <paragraph role="paragraph" id="par_id3156024" l10n="U" xml-lang="en-US" oldref="5">statement block</paragraph>
  <paragraph role="paragraph" id="par_id3146796" l10n="U" xml-lang="en-US" oldref="6">[Exit For]</paragraph>
  <paragraph role="paragraph" id="par_id3159414" l10n="U" xml-lang="en-US" oldref="7">statement block</paragraph>
  <paragraph role="paragraph" id="par_id3153897" l10n="U" xml-lang="en-US" oldref="8">Next [counter]</paragraph>
  <paragraph role="heading" level="2" id="hd_id3150400" l10n="U" xml-lang="en-US" oldref="9">Variables:</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3150358" xml-lang="en-US" oldref="10"><emph>Counter:</emph> Loop counter initially assigned the value to the right of the equal sign (start). Only numeric variables are valid. The loop counter increases or decreases according to the variable Step until End is passed.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3152455" xml-lang="en-US" oldref="11"><emph>Start:</emph> Numeric variable that defines the initial value at the beginning of the loop.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3151043" xml-lang="en-US" oldref="12"><emph>End:</emph> Numeric variable that defines the final value at the end of the loop.</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3156281" xml-lang="en-US" oldref="13"><emph>Step:</emph> Sets the value by which to increase or decrease the loop counter. If Step is not specified, the loop counter is incremented by 1. In this case, End must be greater than Start. If you want to decrease Counter, End must be less than Start, and Step must be assigned a negative value.</paragraph>
  <paragraph xml-lang="en-US" role="paragraph" id="par_id3154684" l10n="U" oldref="14">The <emph>For...Next</emph> loop repeats all of the statements in the loop for the number of times that is specified by the parameters.</paragraph>
  <paragraph role="paragraph" id="par_id3147287" l10n="U" xml-lang="en-US" oldref="15">As the counter variable is decreased, $[officename] Basic checks if the end value has been reached. As soon as the counter passes the end value, the loop automatically ends.</paragraph>
  <paragraph xml-lang="en-US" oldref="16" id="par_id3159154" l10n="U" role="paragraph">It is possible to nest <emph>For...Next</emph> statements. If you do not specify a variable following the <emph>Next</emph> statement, <emph>Next</emph> automatically refers to the most recent <emph>For</emph> statement.</paragraph>
  <paragraph xml-lang="en-US" oldref="17" role="paragraph" id="par_id3155306" l10n="U">If you specify an increment of 0, the statements between <emph>For</emph> and <emph>Next</emph> are repeated continuously.</paragraph>
  <paragraph role="paragraph" id="par_id3155854" l10n="U" xml-lang="en-US" oldref="18">When counting down the counter variable, $[officename] Basic checks for overflow or underflow.  The loop ends when Counter exceeds End (positive Step value) or is less than End (negative Step value).</paragraph>
  <paragraph xml-lang="en-US" oldref="19" l10n="U" role="paragraph" id="par_id3145273">Use the <emph>Exit For</emph> statement to exit the loop unconditionally. This statement must be within a <emph>For...Next</emph> loop. Use the <emph>If...Then</emph> statement to test the exit condition as follows:</paragraph>
  <paragraph role="paragraph" id="par_id3153190" l10n="U" xml-lang="en-US" oldref="20">For...</paragraph>
  <paragraph role="paragraph" id="par_id3149482" l10n="U" xml-lang="en-US" oldref="21">statements</paragraph>
  <paragraph role="paragraph" id="par_id3147124" l10n="U" xml-lang="en-US" oldref="22">If condition = True Then Exit For</paragraph>
  <paragraph role="paragraph" id="par_id3153159" l10n="U" xml-lang="en-US" oldref="23">statements</paragraph>
  <paragraph role="paragraph" id="par_id3154096" l10n="U" xml-lang="en-US" oldref="24">Next</paragraph>
  <paragraph xml-lang="en-US" oldref="25" role="paragraph" id="par_id3156286" l10n="U">Note: In nested <emph>For...Next</emph> loops, if you exit a loop unconditionally with <emph>Exit For</emph>, only one loop is exited.</paragraph>
  <paragraph role="heading" level="2" id="hd_id3148457" l10n="U" xml-lang="en-US" oldref="26">Example</paragraph>
  <paragraph role="paragraph" id="par_id3151074" l10n="U" xml-lang="en-US" oldref="27">The following example uses two nested loops to sort a string array with 10 elements ( sEntry() ), that are first filled with various contents:</paragraph>
  <paragraph role="paragraph" id="par_id3155603" l10n="U" xml-lang="en-US" oldref="28">Sub ExampleSort</paragraph>
  <paragraph role="paragraph" id="par_id3156275" l10n="U" xml-lang="en-US" oldref="29">Dim sEntry(9) As String</paragraph>
  <paragraph role="paragraph" id="par_id3155066" l10n="U" xml-lang="en-US" oldref="30">Dim iCount As Integer</paragraph>
  <paragraph role="paragraph" id="par_id3150751" l10n="U" xml-lang="en-US" oldref="31">Dim iCount2 As Integer</paragraph>
  <paragraph role="paragraph" id="par_id3155446" l10n="U" xml-lang="en-US" oldref="32">Dim sTemp As String</paragraph>
  <paragraph role="paragraph" id="par_id3155767" l10n="U" xml-lang="en-US" oldref="42">sEntry(0) = &quot;Jerry&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3153711" l10n="U" xml-lang="en-US" oldref="33">sEntry(1) = &quot;Patty&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3148993" l10n="U" xml-lang="en-US" oldref="34">sEntry(2) = &quot;Kurt&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3156382" l10n="U" xml-lang="en-US" oldref="35">sEntry(3) = &quot;Thomas&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3155174" l10n="U" xml-lang="en-US" oldref="36">sEntry(4) = &quot;Michael&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3166448" l10n="U" xml-lang="en-US" oldref="37">sEntry(5) = &quot;David&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3149255" l10n="U" xml-lang="en-US" oldref="38">sEntry(6) = &quot;Cathy&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3149565" l10n="U" xml-lang="en-US" oldref="39">sEntry(7) = &quot;Susie&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3145148" l10n="U" xml-lang="en-US" oldref="40">sEntry(8) = &quot;Edward&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3145229" l10n="U" xml-lang="en-US" oldref="41">sEntry(9) = &quot;Christine&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3149107" l10n="U" xml-lang="en-US" oldref="44">For iCount = 0 To 9</paragraph>
  <paragraph role="paragraph" id="par_id3148485" l10n="U" xml-lang="en-US" oldref="45">For iCount2 = iCount + 1 To 9</paragraph>
  <paragraph role="paragraph" id="par_id3155608" l10n="U" xml-lang="en-US" oldref="46">If sEntry(iCount) &gt; sEntry(iCount2) Then</paragraph>
  <paragraph role="paragraph" id="par_id3150938" l10n="U" xml-lang="en-US" oldref="47">sTemp = sEntry(iCount)</paragraph>
  <paragraph role="paragraph" id="par_id3153790" l10n="U" xml-lang="en-US" oldref="48">sEntry(iCount) = sEntry(iCount2)</paragraph>
  <paragraph role="paragraph" id="par_id3149210" l10n="U" xml-lang="en-US" oldref="49">sEntry(iCount2) = sTemp</paragraph>
  <paragraph role="paragraph" id="par_id3153781" l10n="U" xml-lang="en-US" oldref="50">End If</paragraph>
  <paragraph role="paragraph" id="par_id3158446" l10n="U" xml-lang="en-US" oldref="51">Next iCount2</paragraph>
  <paragraph role="paragraph" id="par_id3150783" l10n="U" xml-lang="en-US" oldref="52">Next iCount</paragraph>
  <paragraph role="paragraph" id="par_id3151278" l10n="U" xml-lang="en-US" oldref="57">For iCount = 0 To 9</paragraph>
  <paragraph role="paragraph" id="par_id3148462" l10n="U" xml-lang="en-US" oldref="58">Print sEntry(iCount)</paragraph>
  <paragraph role="paragraph" id="par_id3149528" l10n="U" xml-lang="en-US" oldref="59">Next iCount</paragraph>
  <paragraph role="paragraph" id="par_id3152580" l10n="U" xml-lang="en-US" oldref="60">End Sub</paragraph>
 </body>
</helpdocument>
