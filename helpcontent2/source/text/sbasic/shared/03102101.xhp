<?xml version="1.0" encoding="UTF-8"?>


<!--***********************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************-->
	
<helpdocument version="1.0">
<meta>
<topic id="textsbasicshared03102101xml" indexer="include" status="PUBLISH">
<title id="tit" xml-lang="en-US">ReDim Statement [Runtime]</title>
<filename>/text/sbasic/shared/03102101.xhp</filename>
</topic>
<history>
<created date="2003-10-31T00:00:00">Sun Microsystems, Inc.</created>
<lastedited date="2004-12-09T12:04:37">converted from old format - fpe</lastedited>
</history>
</meta>
<body>
<section id="redim">
<bookmark xml-lang="en-US" branch="index" id="bm_id3150398"><bookmark_value>ReDim statement</bookmark_value>
</bookmark>
<paragraph role="heading" id="hd_id3150398" xml-lang="en-US" level="1" l10n="U" oldref="1"><link href="text/sbasic/shared/03102101.xhp" name="ReDim Statement [Runtime]">ReDim Statement [Runtime]</link></paragraph>
<paragraph role="paragraph" id="par_id3154685" xml-lang="en-US" l10n="U" oldref="2">Declares a variable or an array.</paragraph>
</section>
<paragraph role="heading" id="hd_id3154218" xml-lang="en-US" level="2" l10n="U" oldref="3">Syntax:</paragraph>
<paragraph role="paragraph" id="par_id3156214" xml-lang="en-US" l10n="U" oldref="4">[ReDim]Dim VarName [(start To end)] [As VarType][, VarName2 [(start To end)] [As VarType][,...]]</paragraph>
<paragraph role="paragraph" id="par_id711996" xml-lang="en-US" l10n="NEW">Optionally, you can add the <emph>Preserve</emph> keyword as a parameter to preserve the contents of the array that is redimensioned.</paragraph>
<paragraph role="heading" id="hd_id3148451" xml-lang="en-US" level="2" l10n="U" oldref="5">Parameters:</paragraph>
<paragraph role="paragraph" id="par_id3156423" xml-lang="en-US" l10n="U" oldref="6">
<emph>VarName:</emph> Any variable or array name.</paragraph>
<paragraph role="paragraph" id="par_id3149562" xml-lang="en-US" l10n="CHG" oldref="7">
<emph>Start, End:</emph> Numerical values or constants that define the number of elements (NumberElements=(end-start)+1) and the index range.<comment>UFI: deleted the numbers</comment></paragraph>
<paragraph role="paragraph" id="par_id3155307" xml-lang="en-US" l10n="U" oldref="8">Start and End can be numeric expressions if ReDim is used at the procedure level.</paragraph>
<paragraph role="paragraph" id="par_id3153951" xml-lang="en-US" l10n="U" oldref="9">
<emph>VarType:</emph> Keyword that declares the data type of a variable.</paragraph>
<paragraph role="paragraph" id="par_id3147317" xml-lang="en-US" l10n="U" oldref="10">
<emph>Keyword:</emph> Variable type</paragraph>
<paragraph role="paragraph" id="par_id3153728" xml-lang="en-US" l10n="U" oldref="11">
<emph>Bool: </emph>Boolean variable (True, False)</paragraph>
<paragraph role="paragraph" id="par_id3146121" xml-lang="en-US" l10n="U" oldref="12">
<emph>Date:</emph> Date variable</paragraph>
<paragraph role="paragraph" id="par_id3159156" xml-lang="en-US" l10n="U" oldref="13">
<emph>Double:</emph> Double floating point variable (1.79769313486232x10E308 - 4.94065645841247x10E-324)</paragraph>
<paragraph role="paragraph" id="par_id3148616" xml-lang="en-US" l10n="U" oldref="14">
<emph>Integer:</emph> Integer variable (-32768 - 32767)</paragraph>
<paragraph role="paragraph" id="par_id3147348" xml-lang="en-US" l10n="U" oldref="15">
<emph>Long:</emph> Long integer variable (-2,147,483,648 - 2,147,483,647)</paragraph>
<paragraph role="paragraph" id="par_id3149412" xml-lang="en-US" l10n="U" oldref="16">
<emph>Object:</emph> Object variable (can only be subsequently defined by Set!)</paragraph>
<paragraph role="paragraph" id="par_id3154729" xml-lang="en-US" l10n="U" oldref="17">
<emph>[Single]:</emph> Single floating-point variable (3.402823x10E38 - 1.401298x10E-45). If no key word is specified, a variable is defined as Single, unless a statement from DefBool to DefVar is used.</paragraph>
<paragraph role="paragraph" id="par_id3148458" xml-lang="en-US" l10n="U" oldref="18">
<emph>String:</emph> String variable containing a maximum of 64,000 ASCII characters.</paragraph>
<paragraph role="paragraph" id="par_id3149581" xml-lang="en-US" l10n="U" oldref="19">
<emph>Variant: </emph>Variant variable type (can contain all types and is set by definition).</paragraph>
<paragraph role="paragraph" id="par_id3155601" xml-lang="en-US" l10n="U" oldref="20">In $[officename] Basic, you do not need to declare variables explicitly. However, you need to declare an array before you can use them. You can declare a variable with the Dim statement, using commas to separate multiple declarations. To declare a variable type, enter a type-declaration character following the name or use a corresponding key word.</paragraph>
<paragraph role="paragraph" id="par_id3153415" xml-lang="en-US" l10n="U" oldref="21">$[officename] Basic supports single or multi-dimensional arrays that are defined by a specified variable type. Arrays are suitable if the program contains lists or tables that you want to edit. The advantage of arrays is that it is possible to address individual elements according to indexes, which can be formulated as numeric expressions or variables.</paragraph>
<paragraph role="paragraph" id="par_id3146971" xml-lang="en-US" l10n="U" oldref="22">There are two ways to set the range of indices for arrays declared with the Dim statement:</paragraph>
<paragraph role="paragraph" id="par_id3153950" xml-lang="en-US" l10n="U" oldref="23">DIM text(20) As String REM 21 elements numbered from 0 to 20</paragraph>
<paragraph role="paragraph" id="par_id3146912" xml-lang="en-US" l10n="U" oldref="24">DIM text(5 to 25) As String REM 21 elements numbered from 5 to 25</paragraph>
<paragraph role="paragraph" id="par_id3153709" xml-lang="en-US" l10n="U" oldref="25">DIM text$(-15 to 5) As String REM 21 elements (0 inclusive),</paragraph>
<paragraph role="paragraph" id="par_id3150321" xml-lang="en-US" l10n="U" oldref="26">rem numbered from -15 to 5</paragraph>
<paragraph role="paragraph" id="par_id3149018" xml-lang="en-US" l10n="U" oldref="27">Variable fields, regardless of type, can be made dynamic if they are dimensioned by ReDim at the procedure level in subroutines or functions. Normally, you can only set the range of an array once and you cannot modify it. Within a procedure, you can declare an array using the ReDim statement with numeric expressions to define the range of the field sizes.</paragraph>
<paragraph role="heading" id="hd_id3148405" xml-lang="en-US" level="2" l10n="U" oldref="28">Example:</paragraph>
<paragraph role="paragraph" id="par_id3154362" xml-lang="en-US" l10n="U" oldref="29">Sub ExampleRedim</paragraph>
<paragraph role="paragraph" id="par_id3150042" xml-lang="en-US" l10n="U" oldref="30">Dim iVar() As Integer, iCount As Integer</paragraph>
<paragraph role="paragraph" id="par_id3147339" xml-lang="en-US" l10n="U" oldref="31">ReDim iVar(5) As integer</paragraph>
<paragraph role="paragraph" id="par_id3149106" xml-lang="en-US" l10n="U" oldref="32">For iCount = 1 To 5</paragraph>
<paragraph role="paragraph" id="par_id3155174" xml-lang="en-US" l10n="U" oldref="33">iVar(iCount) = iCount</paragraph>
<paragraph role="paragraph" id="par_id3163805" xml-lang="en-US" l10n="U" oldref="34">Next iCount</paragraph>
<paragraph role="paragraph" id="par_id3149568" xml-lang="en-US" l10n="U" oldref="35">ReDim iVar(10) As integer</paragraph>
<paragraph role="paragraph" id="par_id3147364" xml-lang="en-US" l10n="U" oldref="36">For iCount = 1 To 10</paragraph>
<paragraph role="paragraph" id="par_id3155335" xml-lang="en-US" l10n="U" oldref="37">iVar(iCount) = iCount</paragraph>
<paragraph role="paragraph" id="par_id3154662" xml-lang="en-US" l10n="U" oldref="38">Next iCount</paragraph>
<paragraph role="paragraph" id="par_id3149926" xml-lang="en-US" l10n="U" oldref="39">end sub</paragraph>
</body>
</helpdocument>
