<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: 01170700.xhp,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 21:14:28 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************--><helpdocument version="1.0">
<meta>
<topic id="textshared0201170700xml" indexer="include" status="PUBLISH">
<title xml-lang="en-US" id="tit">HTML Filters and Forms</title>
<filename>/text/shared/02/01170700.xhp</filename>
</topic>
<history>
<created date="2003-10-31T00:00:00">Sun Microsystems, Inc.</created>
<lastedited date="2003-10-31T00:00:00">converted from old format - fpe</lastedited>
</history>
</meta>
<body>
  
  
  <bookmark xml-lang="en-US" branch="index" id="bm_id3163829"><bookmark_value>forms; HTML filters</bookmark_value></bookmark><paragraph role="heading" level="1" id="hd_id3163829" l10n="U" xml-lang="en-US" oldref="1">HTML Filters and Forms</paragraph>
  <paragraph role="paragraph" id="par_id3147285" l10n="U" xml-lang="en-US" oldref="2">You can use all control element and form events in HTML documents. There have been numerous events to date (for example, focus events), which have not been changed. They will continue to be imported and exported as ONFOCUS, ONBLUR, and so on for JavaScript and as SDONFOCUS, SDONBLUR, and so on for $[officename] Basic.</paragraph>
  <paragraph role="paragraph" id="par_id3150616" l10n="U" xml-lang="en-US" oldref="3">Generic names that consist of the Listener interface and the method name of the event are used for all other events: An event registered as XListener::method is exported as</paragraph>
  <paragraph role="paragraph" id="par_id3147571" l10n="U" xml-lang="en-US" oldref="4">SDEvent-XListener-method = &quot;/* event-code */&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3152425" l10n="U" xml-lang="en-US" oldref="5">Note that the XListener- and method components of this option are case sensitive.</paragraph>
  <paragraph role="paragraph" id="par_id3153683" l10n="U" xml-lang="en-US" oldref="6">Event handling of controls is performed using the $[officename] API. If you assign an event to a control, an object registers itself internally as a &quot;Listener&quot; for a specific control event. To do this, the object must use a specific interface, for example the XFocusListener Interface, so that it can react to focus events. When the event occurs, the control then invokes a special method of the Listener interface when the control receives the focus. The internally registered object then invokes the JavaScript or $[officename] Basic code, which was assigned to the event.</paragraph>
  <paragraph role="paragraph" id="par_id3156410" l10n="U" xml-lang="en-US" oldref="7">The HTML filter now uses precisely these listener interfaces and method names so that it can import and export events as desired. You can register a focus event through</paragraph>
  <paragraph role="paragraph" id="par_id3150506" l10n="U" xml-lang="en-US" oldref="8">&lt;INPUT TYPE=text ONFOCUS=&quot;/* code */&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3154289" l10n="U" xml-lang="en-US" oldref="9">rather than through the</paragraph>
  <paragraph role="paragraph" id="par_id3155391" l10n="U" xml-lang="en-US" oldref="10">&lt;INPUT TYPE=text SDEvent-XFocusListener-focusGained=&quot;/* code */&quot;</paragraph>
  <paragraph role="paragraph" id="par_id3152996" l10n="U" xml-lang="en-US" oldref="11">register. Events can therefore be registered as desired, including those not offered in the list boxes. To define the script language of events, you can write the following line in the document header:</paragraph>
  <paragraph role="paragraph" id="par_id3150443" l10n="U" xml-lang="en-US" oldref="12">&lt;META HTTP-EQUIV=&quot;content-script-type&quot; CONTENT=&quot;...&quot;&gt;</paragraph>
  <paragraph role="paragraph" id="par_id3166410" l10n="U" xml-lang="en-US" oldref="13">As CONTENT you can, for example, use &quot;text/x-StarBasic&quot; for $[officename] Basic or a &quot;text/JavaScript&quot; for JavaScript. If no entry is made, JavaScript is assumed.</paragraph>
  <paragraph role="paragraph" id="par_id3146797" l10n="U" xml-lang="en-US" oldref="14">During exporting, the default script language will be defined based on the first module found in macro management. For events, only one language can be used per document.</paragraph>
 </body>
</helpdocument>
