<?xml version="1.0" encoding="UTF-8"?>
<!--***********************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRUNTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRUNTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************--><helpdocument version="1.0">
<meta>
<topic id="textshared0201170202xml" indexer="include" status="PUBLISH">
<title xml-lang="en-US" id="tit">Events</title>
<filename>/text/shared/02/01170202.xhp</filename>
</topic>
<history>
<created date="2003-10-31T00:00:00">Sun Microsystems, Inc.</created>
<lastedited date="2003-10-31T00:00:00">converted from old format - fpe</lastedited>
</history>
</meta>
<body>
  
  
  <section id="ereignisse">
  <bookmark branch="index" xml-lang="en-US" id="bm_id3150499"><bookmark_value>forms; events</bookmark_value><bookmark_value>events; forms</bookmark_value></bookmark><paragraph id="hd_id3150499" role="heading" level="1" oldref="1" l10n="U" xml-lang="en-US"><link href="text/shared/02/01170202.xhp" name="Events">Events</link></paragraph>
  <paragraph xml-lang="en-US" role="paragraph" id="par_id3147043" l10n="U" oldref="2">The<emph> Events </emph>tab page, allows you to assign a macro to certain events which occur in a form.</paragraph>
  </section>
  <paragraph role="paragraph" id="par_id3149388" l10n="E" xml-lang="en-US" oldref="" localize="false"><link href="text/shared/00/00040501.xhp#formulareigenschaftenereignisse" name=""><embedvar href="text/shared/00/00000004.xhp#wie"/></link></paragraph>
  <paragraph role="paragraph" id="par_id3149178" l10n="U" xml-lang="en-US" oldref="35">If the form has a subform, the subform also reacts to events in the parent form.</paragraph>
  <paragraph xml-lang="en-US" oldref="3" role="paragraph" id="par_id3159233" l10n="U">To link an event with a macro, first write a macro that contains all the commands to be executed when the event happens. Then assign this macro to the respective event by clicking the <emph>... </emph> button beside the corresponding event. The<emph> Assign Macro </emph>dialog opens, where you can select the macro.</paragraph>
  <paragraph role="paragraph" id="par_id3149182" l10n="U" xml-lang="en-US" oldref="29">The following actions can be configured individually, meaning that you can use your own dialogs to depict an action:</paragraph>
  <list type="unordered">
   <listitem>
    <paragraph role="listitem" id="par_id3166460" l10n="U" xml-lang="en-US" oldref="30">Displaying an error message,</paragraph>
   </listitem>
  </list>
  <list type="unordered">
   <listitem>
    <paragraph role="listitem" id="par_id3152996" l10n="U" xml-lang="en-US" oldref="31">Confirming a delete process (for data records),</paragraph>
   </listitem>
  </list>
  <list type="unordered">
   <listitem>
    <paragraph role="listitem" id="par_id3153541" l10n="U" xml-lang="en-US" oldref="32">Querying parameters,</paragraph>
   </listitem>
  </list>
  <list type="unordered">
   <listitem>
    <paragraph role="listitem" id="par_id3155261" l10n="U" xml-lang="en-US" oldref="33">Checking input when saving a data record.</paragraph>
   </listitem>
  </list>
  <paragraph role="paragraph" id="par_id3153127" l10n="U" xml-lang="en-US" oldref="34">For example, you can issue a &quot;confirm deletion&quot; request such as &quot;Really delete customer xyz?&quot; when deleting a data record.</paragraph>
  <paragraph role="paragraph" id="par_id3150986" l10n="U" xml-lang="en-US" oldref="4">The following lists and describes all events in a form that can be linked to a macro:</paragraph>
  <section id="reset_update">
  <bookmark branch="hid/HID_EVT_APPROVERESETTED" xml-lang="en-US" id="bm_id3154851"/><paragraph role="heading" level="2" id="hd_id3157909" l10n="U" xml-lang="en-US" oldref="36">Prior to reset</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3155390" xml-lang="en-US" oldref="51"><ahelp visibility="visible" hid="HID_EVT_APPROVERESETTED">The<emph> Prior to reset </emph>event occurs before a form is reset.</ahelp> The linked macro can, for example, prevent this action by returning &quot;FALSE&quot;.</paragraph>
  <paragraph role="paragraph" id="par_id3149236" l10n="U" xml-lang="en-US" oldref="52">A form is reset if one of the following conditions is met:</paragraph>
  <list type="unordered">
   <listitem>
    <paragraph role="listitem" id="par_id3149164" l10n="U" xml-lang="en-US" oldref="53">The user presses an (HTML) button that is defined as a reset button.</paragraph>
   </listitem>
   <listitem>
    <paragraph xml-lang="en-US" role="listitem" id="par_id3153666" l10n="U" oldref="54">A new and empty record is created in a form that is linked to a data source. For example, in the last record, the <emph>Next Record</emph> button may be pressed.</paragraph>
   </listitem>
  </list>
  <bookmark branch="hid/HID_EVT_RESETTED" xml-lang="en-US" id="bm_id3152473"/><paragraph role="heading" level="2" id="hd_id3156119" l10n="U" xml-lang="en-US" oldref="37">After resetting</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3148563" xml-lang="en-US" oldref="55"><ahelp visibility="visible" hid="HID_EVT_RESETTED">The<emph> After resetting </emph>event occurs after a form has been reset.</ahelp></paragraph>
  <bookmark branch="hid/HID_EVT_BEFOREUPDATE" xml-lang="en-US" id="bm_id3148947"/><paragraph role="heading" level="2" id="hd_id3147559" l10n="U" xml-lang="en-US" oldref="17">Before update</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3149669" xml-lang="en-US" oldref="56"><ahelp visibility="visible" hid="HID_EVT_BEFOREUPDATE">The<emph> Before update </emph>event occurs before the control content changed by the user is written into the data source.</ahelp> The linked macro can, for example, prevent this action by returning &quot;FALSE&quot;.</paragraph>
  <bookmark branch="hid/HID_EVT_AFTERUPDATE" xml-lang="en-US" id="bm_id3154073"/><paragraph role="heading" level="2" id="hd_id3153779" l10n="U" xml-lang="en-US" oldref="19">After update</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3153360" xml-lang="en-US" oldref="57"><ahelp visibility="visible" hid="HID_EVT_AFTERUPDATE">The<emph> After update </emph>event occurs after the control content changed by the user has been written into the data source.</ahelp></paragraph>
  </section>
  <bookmark branch="hid/HID_EVT_SUBMITTED" xml-lang="en-US" id="bm_id3147084"/><paragraph role="heading" level="2" id="hd_id3150870" l10n="U" xml-lang="en-US" oldref="27">Before submitting</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3159152" xml-lang="en-US" oldref="28"><ahelp visibility="visible" hid="HID_EVT_SUBMITTED">The<emph> Before submitting </emph>event occurs before the form data is sent.</ahelp></paragraph>
  <bookmark branch="hid/HID_EVT_LOADED" xml-lang="en-US" id="bm_id3151383"/><paragraph role="heading" level="2" id="hd_id3149167" l10n="U" xml-lang="en-US" oldref="5">When loading</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3156423" xml-lang="en-US" oldref="6"><ahelp visibility="visible" hid="HID_EVT_LOADED">The<emph> When loading </emph>event occurs directly after the form has been loaded.</ahelp></paragraph>
  <bookmark branch="hid/HID_EVT_RELOADING" xml-lang="en-US" id="bm_id3157320"/><paragraph role="heading" level="2" id="hd_id3148451" l10n="U" xml-lang="en-US" oldref="38">Before reloading</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3154218" xml-lang="en-US" oldref="39"><ahelp visibility="visible" hid="HID_EVT_RELOADING">The<emph> Before reloading </emph>event occurs before the form is reloaded.</ahelp> The data content has not yet been refreshed.</paragraph>
  <bookmark branch="hid/HID_EVT_RELOADED" xml-lang="en-US" id="bm_id3154946"/><paragraph role="heading" level="2" id="hd_id3155102" l10n="U" xml-lang="en-US" oldref="40">When reloading</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3157895" xml-lang="en-US" oldref="41"><ahelp visibility="visible" hid="HID_EVT_RELOADED">The<emph> When reloading </emph>event occurs directly after the form has been reloaded.</ahelp> The data content has already been refreshed.</paragraph>
  <bookmark branch="hid/HID_EVT_UNLOADING" xml-lang="en-US" id="bm_id3151116"/><paragraph role="heading" level="2" id="hd_id3152792" l10n="U" xml-lang="en-US" oldref="42">Before unloading</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3152598" xml-lang="en-US" oldref="43"><ahelp visibility="visible" hid="HID_EVT_UNLOADING">The<emph> Before unloading </emph>event occurs before the form is unloaded; that is, separated from its data source.</ahelp></paragraph>
  <bookmark branch="hid/HID_EVT_UNLOADED" xml-lang="en-US" id="bm_id3152938"/><paragraph role="heading" level="2" id="hd_id3154145" l10n="U" xml-lang="en-US" oldref="44">When unloading</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3154638" xml-lang="en-US" oldref="45"><ahelp visibility="visible" hid="HID_EVT_UNLOADED">The<emph> When unloading </emph>event occurs directly after the form has been unloaded; that is, separated from its data source.</ahelp></paragraph>
  <bookmark branch="hid/HID_EVT_CONFIRMDELETE" xml-lang="en-US" id="bm_id3154127"/><paragraph role="heading" level="2" id="hd_id3147426" l10n="U" xml-lang="en-US" oldref="25">Confirm deletion</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3154988" xml-lang="en-US" oldref="26"><ahelp visibility="visible" hid="HID_EVT_CONFIRMDELETE">The<emph> Confirm deletion </emph>event occurs as soon as data has been deleted from the form.</ahelp> For example, the linked macro can request confirmation in a dialog.</paragraph>
  <bookmark branch="hid/HID_EVT_APPROVEROWCHANGE" xml-lang="en-US" id="bm_id3151351"/><paragraph role="heading" level="2" id="hd_id3149481" l10n="U" xml-lang="en-US" oldref="46">Before record action</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3156007" xml-lang="en-US" oldref="58"><ahelp visibility="visible" hid="HID_EVT_APPROVEROWCHANGE">The<emph> Before record action </emph>event occurs before the current record is changed.</ahelp> For example, the linked macro can request confirmation in a dialog.</paragraph>
  <bookmark branch="hid/HID_EVT_ROWCHANGE" xml-lang="en-US" id="bm_id3150685"/><paragraph role="heading" level="2" id="hd_id3145749" l10n="U" xml-lang="en-US" oldref="47">After record action</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3146975" xml-lang="en-US" oldref="59"><ahelp visibility="visible" hid="HID_EVT_ROWCHANGE">The<emph> After record action </emph>event occurs directly after the current record has been changed.</ahelp></paragraph>
  <bookmark branch="hid/HID_EVT_POSITIONING" xml-lang="en-US" id="bm_id3155413"/><paragraph role="heading" level="2" id="hd_id3154012" l10n="U" xml-lang="en-US" oldref="48">Before record change</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3149664" xml-lang="en-US" oldref="60"><ahelp visibility="visible" hid="HID_EVT_POSITIONING">The<emph> Before record change </emph>event occurs before the current record pointer is changed.</ahelp>. For example, the linked macro can prevent this action by returning &quot;FALSE&quot;.</paragraph>
  <bookmark branch="hid/HID_EVT_POSITIONED" xml-lang="en-US" id="bm_id3150420"/><paragraph role="heading" level="2" id="hd_id3157975" l10n="U" xml-lang="en-US" oldref="49">After record change</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3154098" xml-lang="en-US" oldref="61"><ahelp visibility="visible" hid="HID_EVT_POSITIONED">The<emph> After record change </emph>event occurs directly after the current record pointer has been changed.</ahelp>.</paragraph>
  <bookmark branch="hid/HID_EVT_APPROVEPARAMETER" xml-lang="en-US" id="bm_id3149298"/><paragraph role="heading" level="2" id="hd_id3151076" l10n="U" xml-lang="en-US" oldref="50">Fill parameters</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3147396" xml-lang="en-US" oldref="62"><ahelp visibility="visible" hid="HID_EVT_APPROVEPARAMETER">The<emph> Fill parameters </emph>event occurs when the form to be loaded has parameters that must be filled out.</ahelp> For example, the data source of the form can be the following SQL command:</paragraph>
  <paragraph role="paragraph" id="par_id3148773" l10n="U" xml-lang="en-US" oldref="63">SELECT * FROM address WHERE name=:name</paragraph>
  <paragraph role="paragraph" id="par_id3149581" l10n="U" xml-lang="en-US" oldref="64">Here :name is a parameter that must be filled out when loading. The parameter is automatically filled out from the parent form if possible. If the parameter cannot be filled out, this event is called and a linked macro can fill out the parameter.</paragraph>
  <bookmark branch="hid/HID_EVT_ERROROCCURED" xml-lang="en-US" id="bm_id3148387"/><paragraph role="heading" level="2" id="hd_id3146926" l10n="U" xml-lang="en-US" oldref="9">Error occurred</paragraph>
  <paragraph l10n="U" role="paragraph" id="par_id3149485" xml-lang="en-US" oldref="10"><ahelp visibility="visible" hid="HID_EVT_ERROROCCURED">The<emph> Error occurred </emph>event is activated if an error occurs when accessing the data source.</ahelp> This applies to forms, list boxes and combo boxes.</paragraph>
 </body>
</helpdocument>
