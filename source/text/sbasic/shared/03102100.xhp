<?xml version="1.0" encoding="UTF-8"?>
<helpdocument version="1.0">
<!--
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
-->

<meta>
  <topic id="textsbasicshared03102100xml" indexer="include" status="PUBLISH">
    <title id="tit" xml-lang="en-US">Dim Statement [Runtime]</title>
    <filename>/text/sbasic/shared/03102100.xhp</filename>
  </topic>
</meta>

<body>


<section id="dimtext">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149812">
  <bookmark_value>Dim statement</bookmark_value>
  <bookmark_value>arrays; dimensioning</bookmark_value>
  <bookmark_value>dimensioning arrays</bookmark_value>
</bookmark>


<paragraph id="hd_id3149812" role="heading" level="1" xml-lang="en-US"><link href="text/sbasic/shared/03102100.xhp" name="Dim Statement [Runtime]">Dim Statement [Runtime]</link></paragraph>
<paragraph id="par_id3143271" role="paragraph" xml-lang="en-US">Declares a variable or an array.</paragraph>
</section>
<paragraph id="par_id3154686" role="paragraph" xml-lang="en-US">If the variables are separated by commas (for example, DIM sPar1, sPar2, sPar3 AS STRING), only Variant variables can be defined. Use a separate definition line for each variable.</paragraph>
<bascode>
<paragraph id="par_idm871116272" role="bascode" localize="false" xml-lang="en-US">Dim sPar1 As String</paragraph>
<paragraph id="par_idm871115040" role="bascode" localize="false" xml-lang="en-US">Dim sPar2 As String</paragraph>
<paragraph id="par_idm871113808" role="bascode" localize="false" xml-lang="en-US">Dim sPar3 As String</paragraph>
</bascode>
<paragraph id="par_id3152576" role="paragraph" xml-lang="en-US">Dim declares local variables within subroutines. Global variables are declared with the PUBLIC or the PRIVATE statement.</paragraph>

<paragraph id="hd_id3156443" role="heading" level="2" xml-lang="en-US">Syntax:</paragraph>
<bascode>
<paragraph id="par_id3149412" role="bascode" xml-lang="en-US">[ReDim]Dim VarName [(start To end)] [As VarType][, VarName2 [(start To end)] [As VarType][,...]]</paragraph>
</bascode>

<paragraph id="hd_id3147397" role="heading" level="2" xml-lang="en-US">Parameters:</paragraph>
<paragraph id="par_id3154730" role="paragraph" xml-lang="en-US"> <emph>VarName:</emph> Any variable or array name.</paragraph>
<paragraph id="par_id3147125" role="paragraph" xml-lang="en-US"> <emph>Start, End:</emph> Numerical values or constants that define the number of elements (NumberElements=(end-start)+1) and the index range.<comment>see #i36558</comment></paragraph>
<paragraph id="par_id3153877" role="paragraph" xml-lang="en-US">Start and End can be numerical expressions if ReDim is applied at the procedure level.</paragraph>
<paragraph id="par_id3153510" role="paragraph" xml-lang="en-US"> <emph>VarType:</emph> Key word that declares the data type of a variable.</paragraph>
<paragraph id="par_id3154015" role="paragraph" xml-lang="en-US"> <emph>Keyword:</emph> Variable type</paragraph>
<paragraph id="par_id3153949" role="paragraph" xml-lang="en-US"> <emph>Bool:</emph> Boolean variable (True, False)</paragraph>
<paragraph id="par_id3156275" role="paragraph" xml-lang="en-US"> <emph>Currency:</emph> Currency-Variable (Currency with 4 Decimal places)</paragraph>
<paragraph id="par_id3156057" role="paragraph" xml-lang="en-US"> <emph>Date:</emph> Date variable</paragraph>
<paragraph id="par_id3148405" role="paragraph" xml-lang="en-US"> <emph>Double:</emph> Double-precision floating-point variable (1,79769313486232 x 10E308 - 4,94065645841247 x 10E-324)</paragraph>
<paragraph id="par_id3148916" role="paragraph" xml-lang="en-US"> <emph>Integer:</emph> Integer variable (-32768 - 32767)</paragraph>
<paragraph id="par_id3150045" role="paragraph" xml-lang="en-US"> <emph>Long:</emph> Long integer variable (-2.147.483.648 - 2.147.483.647)</paragraph>
<paragraph id="par_id3149255" role="paragraph" xml-lang="en-US"> <emph>Object:</emph> Object variable (Note: this variable can only subsequently be defined with Set!)</paragraph>
<paragraph id="par_id3155937" role="paragraph" xml-lang="en-US"> <emph>Single:</emph> Single-precision floating-point variable (3,402823 x 10E38 - 1,401298 x 10E-45).</paragraph>
<paragraph id="par_id3151251" role="paragraph" xml-lang="en-US"> <emph>String:</emph> String variable consisting of a maximum of 64,000 ASCII characters.</paragraph>
<paragraph id="par_id3154704" role="paragraph" xml-lang="en-US"> <emph>[Variant]:</emph> Variant variable type (contains all types, specified by definition). If a key word is not specified, variables are automatically defined as Variant Type, unless a statement from DefBool to DefVar is used.</paragraph>
<paragraph id="par_id3146316" role="paragraph" xml-lang="en-US">In $[officename] Basic, you do not need to declare variables explicitly. However, you need to declare an array before you can use them. You can declare a variable with the Dim statement, using commas to separate multiple declarations. To declare a variable type, enter a type-declaration character following the name or use a corresponding key word.</paragraph>
<paragraph id="par_id3149924" role="paragraph" xml-lang="en-US">$[officename] Basic supports single or multi-dimensional arrays that are defined by a specified variable type. Arrays are suitable if the program contains lists or tables that you want to edit. The advantage of arrays is that it is possible to address individual elements according to indexes, which can be formulated as numeric expressions or variables.</paragraph>
<paragraph id="par_id3148488" role="paragraph" xml-lang="en-US">Arrays are declared with the Dim statement. There are two methods to define the index range:</paragraph>
<paragraph id="par_id3154662" role="paragraph" xml-lang="en-US">DIM text(20) as String REM 21 elements numbered from 0 to 20</paragraph>
<paragraph id="par_id3155604" role="paragraph" xml-lang="en-US">DIM text(5 to 25) as String REM 21 elements numbered from 5 to 25</paragraph>
<paragraph id="par_id3151274" role="paragraph" xml-lang="en-US">DIM text(-15 to 5) as String REM 21 elements (including 0)</paragraph>
<paragraph id="par_id3152774" role="paragraph" xml-lang="en-US">REM numbered from -15 to 5</paragraph>
<paragraph id="par_id3150829" role="paragraph" xml-lang="en-US">Two-dimensional data field</paragraph>
<paragraph id="par_id3149529" role="paragraph" xml-lang="en-US">DIM text(20,2) as String REM 63 elements; form 0 to 20 level 1, from 0 to 20 level 2 and from 0 to 20 level 3.</paragraph>
<paragraph id="par_id3159239" role="paragraph" xml-lang="en-US">You can declare an array types as dynamic if a ReDim statement defines the number of dimensions in the subroutine or the function that contains the array. Generally, you can only define an array dimension once, and you cannot modify it. Within a subroutine, you can declare an array with ReDim. You can only define dimensions with numeric expressions. This ensures that the fields are only as large as necessary.</paragraph>

<paragraph id="hd_id3150344" role="heading" level="2" xml-lang="en-US">Example:</paragraph>
<bascode>
<paragraph id="par_idm871051008" role="bascode" localize="false" xml-lang="en-US">Sub ExampleDim1</paragraph>
<paragraph id="par_idm871049776" role="bascode" localize="false" xml-lang="en-US">Dim sVar As String</paragraph>
<paragraph id="par_idm871048544" role="bascode" localize="false" xml-lang="en-US">Dim iVar As Integer</paragraph>
<paragraph id="par_id3154657" role="bascode" xml-lang="en-US">    sVar = "Office"</paragraph>
<paragraph id="par_idm871045600" role="bascode" localize="false" xml-lang="en-US">End Sub</paragraph>
<paragraph id="par_idm871044368" role="bascode" localize="false" xml-lang="en-US"> </paragraph>
<paragraph id="par_idm871043120" role="bascode" localize="false" xml-lang="en-US">Sub ExampleDim2</paragraph>
<paragraph id="par_id3149036" role="bascode" xml-lang="en-US">' Two-dimensional data field</paragraph>
<paragraph id="par_idm871040112" role="bascode" localize="false" xml-lang="en-US">Dim stext(20,2) As String</paragraph>
<paragraph id="par_id3153782" role="bascode" xml-lang="en-US">Const sDim As String = " Dimension:"</paragraph>
<paragraph id="par_idm871037136" role="bascode" localize="false" xml-lang="en-US">For i = 0 To 20</paragraph>
<paragraph id="par_idm871035904" role="bascode" localize="false" xml-lang="en-US">    For ii = 0 To 2</paragraph>
<paragraph id="par_idm871034672" role="bascode" localize="false" xml-lang="en-US">        stext(i,ii) = str(i) &amp; sDim &amp; str(ii)</paragraph>
<paragraph id="par_idm871033392" role="bascode" localize="false" xml-lang="en-US">    Next ii</paragraph>
<paragraph id="par_idm871032160" role="bascode" localize="false" xml-lang="en-US">Next i</paragraph>
<paragraph id="par_idm871030928" role="bascode" localize="false" xml-lang="en-US">For i = 0 To 20</paragraph>
<paragraph id="par_idm871029696" role="bascode" localize="false" xml-lang="en-US">    For ii = 0 To 2</paragraph>
<paragraph id="par_idm871028464" role="bascode" localize="false" xml-lang="en-US">        MsgBox stext(i,ii)</paragraph>
<paragraph id="par_idm871027216" role="bascode" localize="false" xml-lang="en-US">    Next ii</paragraph>
<paragraph id="par_idm871025984" role="bascode" localize="false" xml-lang="en-US">Next i</paragraph>
<paragraph id="par_idm871024752" role="bascode" localize="false" xml-lang="en-US">End Sub</paragraph>
</bascode>
</body>

</helpdocument>