<?xml version="1.0" encoding="UTF-8"?>
<helpdocument version="1.0">
	
<!--
/*
 * Version: MPL 1.1 / GPLv3+ / LGPLv3+
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License or as specified alternatively below. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * Major Contributor(s):
 * [ Copyright (C) 2011 Wolfgang Pechlaner <libo@pechlaner.at> (initial developer) ]
 * [ Copyright (C) 2011 Noel Grandin <noel@peralex.com> (English translation)]
 *
 * All Rights Reserved.
 *
 * For minor contributions see the git repository.
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 3 or later (the "GPLv3+"), or
 * the GNU Lesser General Public License Version 3 or later (the "LGPLv3+"),
 * in which case the provisions of the GPLv3+ or the LGPLv3+ are applicable
 * instead of those above.
 */  -->
 
	
<meta>
<topic id="textscalc0104060120xml" indexer="include">
<title id="tit" xml-lang="en-US">Bit Operation Functions</title>
<filename>/text/scalc/01/04060120.xhp</filename>
</topic>
</meta>
<body>
<paragraph role="heading" id="hd_id4149052" xml-lang="en-US" level="1" l10n="U" oldref="1">Bit Operation Functions</paragraph>
<section id="howtoget">
<embed href="text/scalc/00/00000404.xhp#eikama"/>
</section>
<sort order="asc">
<section id="bitand">
<bookmark xml-lang="en-US" branch="index" id="bm_id4150026"><bookmark_value>BITAND function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BITAND" id="bm_id4145827" localize="false"/>
<paragraph role="heading" id="hd_id4150026" xml-lang="en-US" level="2" l10n="U" oldref="238">BITAND</paragraph>
<paragraph role="paragraph" id="par_id4146942" xml-lang="en-US" l10n="U" oldref="239"><ahelp hid="HID_FUNC_BITAND">Returns a bitwise logical "and" of the parameters.</ahelp></paragraph>
<paragraph role="heading" id="hd_id4150459" xml-lang="en-US" level="3" l10n="U" oldref="240">Syntax</paragraph>
<paragraph role="code" id="par_id4146878" xml-lang="en-US" l10n="U" oldref="241">BITAND(number1; number2)</paragraph>
<paragraph role="paragraph" id="par_id4151228" xml-lang="en-US" l10n="U" oldref="242">
<emph>Number1</emph> and <emph>number2</emph> are positive integers less than 2 ^ 48 (281 474 976 710 656).</paragraph>
<paragraph role="heading" id="hd_id4148582" xml-lang="en-US" level="3" l10n="U" oldref="248">Example</paragraph>
<paragraph role="paragraph" id="par_id4149246" xml-lang="en-US" l10n="U" oldref="250">
<item type="input">=BITAND(6;10)</item> returns 2 (0110 &amp; 1010 = 0010).</paragraph>
</section>
<section id="bitor">
<bookmark xml-lang="en-US" branch="index" id="bm_id4146139"><bookmark_value>BITOR function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BITOR" id="bm_id4148754" localize="false"/>
<paragraph role="heading" id="hd_id4146139" xml-lang="en-US" level="2" oldref="252">BITOR</paragraph>
<paragraph role="paragraph" id="par_id4150140" xml-lang="en-US" l10n="U" oldref="253"><ahelp hid="HID_FUNC_BITOR">Returns a bitwise logical "or" of the parameters.</ahelp></paragraph>
<paragraph role="heading" id="hd_id4149188" xml-lang="en-US" level="3" l10n="U" oldref="254">Syntax</paragraph>
<paragraph role="code" id="par_id4148733" xml-lang="en-US" l10n="U" oldref="255">BITOR(number1; number2)</paragraph>
<paragraph role="paragraph" id="par_id4150864" xml-lang="en-US" l10n="U" oldref="256">
<emph>Number1</emph> and <emph>number2</emph> are positive integers less than 2 ^ 48 (281 474 976 710 656).</paragraph>
<paragraph role="paragraph" id="par_id4149884" xml-lang="en-US" l10n="U" oldref="264">
<item type="input">=BITOR(6;10)</item> returns 14  (0110 | 1010 = 1110).</paragraph>
</section>
<section id="bitxor">
<bookmark xml-lang="en-US" branch="index" id="bm_id4150019"><bookmark_value>BITXOR function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BITXOR" id="bm_id4154330" localize="false"/>
<paragraph role="heading" id="hd_id4150019" xml-lang="en-US" level="2" oldref="182">BITXOR</paragraph>
<paragraph role="paragraph" id="par_id4145246" xml-lang="en-US" l10n="U" oldref="183"><ahelp hid="HID_FUNC_BITXOR">Returns a bitwise logical "exclusive or" of the parameters.</ahelp></paragraph>
<paragraph role="heading" id="hd_id4153047" xml-lang="en-US" level="3" l10n="U" oldref="184">Syntax</paragraph>
<paragraph role="code" id="par_id4157970" xml-lang="en-US" l10n="U" oldref="185">BITXOR(number1; number2)</paragraph>
<paragraph role="paragraph" id="par_id4145302" xml-lang="en-US" l10n="U" oldref="186">
<emph>Number1</emph> and <emph>number2</emph> are positive integers less than 2 ^ 48 (281 474 976 710 656).</paragraph>
<paragraph role="heading" id="hd_id4150269" xml-lang="en-US" level="3" l10n="U" oldref="192">Example</paragraph>
<paragraph role="paragraph" id="par_id4149394" xml-lang="en-US" l10n="U" oldref="196">
<item type="input">=BITXOR(6;10)</item> returns  12 (0110 ^ 1010 = 1100)</paragraph>
</section>
<section id="bitlshift">
<bookmark xml-lang="en-US" branch="index" id="bm_id4155370"><bookmark_value>BITLSHIFT function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BITLSHIFT" id="bm_id4148593" localize="false"/>
<paragraph role="heading" id="hd_id4155370" xml-lang="en-US" level="2" oldref="266">BITLSHIFT</paragraph>
<paragraph role="paragraph" id="par_id4158411" xml-lang="en-US" l10n="U" oldref="267"><ahelp hid="HID_FUNC_BITLSHIFT">Shifts a number left by n bits.</ahelp></paragraph>
<paragraph role="heading" id="hd_id4155814" xml-lang="en-US" level="3" l10n="U" oldref="268">Syntax</paragraph>
<paragraph role="code" id="par_id4147536" xml-lang="en-US" l10n="U" oldref="269">BITLSHIFT(number; shift)</paragraph>
<paragraph role="paragraph" id="par_id4150475" xml-lang="en-US" l10n="U" oldref="270">
<emph>Number</emph> is a positive integer less than 2 ^ 48 (281 474 976 710 656).</paragraph>
<paragraph role="paragraph" id="par_id4153921" xml-lang="en-US" l10n="U" oldref="271">
<emph>Shift</emph> is the number of positions the bits will be moved to the left. If shift is negative, it is synonymous with BITRSHIFT (number; -shift).</paragraph>
<paragraph role="heading" id="hd_id4153723" xml-lang="en-US" level="3" l10n="U" oldref="276">Example</paragraph>
<paragraph role="paragraph" id="par_id4149819" xml-lang="en-US" l10n="U" oldref="278">
<item type="input">=BITLSHIFT(6;1)</item> returns 12 (0110 &lt;&lt; 1 = 1100).</paragraph>
</section>
<section id="bitrshift">
<bookmark xml-lang="en-US" branch="index" id="bm_id4083280"><bookmark_value>BITRSHIFT function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BITRSHIFT" id="bm_id4154312" localize="false"/>
<paragraph role="heading" id="hd_id4083280" xml-lang="en-US" level="2" oldref="165">BITRSHIFT</paragraph>
<paragraph role="paragraph" id="par_id4152482" xml-lang="en-US" l10n="U" oldref="166"><ahelp hid="HID_FUNC_BITRSHIFT">Shifts a number right by n bits.</ahelp></paragraph>
<paragraph role="heading" id="hd_id4149713" xml-lang="en-US" level="3" l10n="U" oldref="167">Syntax</paragraph>
<paragraph role="code" id="par_id4145087" xml-lang="en-US" l10n="U" oldref="168">BITRSHIFT(number; shift)</paragraph>
<paragraph role="paragraph" id="par_id4149277" xml-lang="en-US" l10n="U" oldref="169">
<emph>Number</emph> is a positive integer less than 2 ^ 48 (281 474 976 710 656).</paragraph>
<paragraph role="paragraph" id="par_id4149270" xml-lang="en-US" l10n="U" oldref="170">
<emph>Shift</emph> is the number of positions the bits will be moved to the right. If shift is negative, it is synonymous with BITLSHIFT (number; -shift).</paragraph>
<paragraph role="heading" id="hd_id4152933" xml-lang="en-US" level="3" l10n="U" oldref="175">Example</paragraph>
<paragraph role="paragraph" id="par_id4156130" xml-lang="en-US" l10n="U" oldref="179">
<item type="input">=BITRSHIFT(6;1)</item> returns 3 (0110 &gt;&gt; 1 = 0011).</paragraph>
</section>
</sort>
<section id="relatedtopics">
<embed href="text/scalc/01/04060100.xhp#drking"/>
</section>
</body>
</helpdocument>
