<?xml version="1.0" encoding="UTF-8"?>
<helpdocument version="1.0">
<!--
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
-->
<meta>
  <topic id="textscalc0104060104xml" indexer="include">
    <title id="tit" xml-lang="en-US">Information Functions</title>
    <filename>/text/scalc/01/04060104.xhp</filename>
  </topic>
</meta>
<body>
<bookmark xml-lang="en-US" branch="index" id="bm_id3147247">
  <bookmark_value>information functions</bookmark_value>
  <bookmark_value>Function Wizard; information</bookmark_value>
  <bookmark_value>functions; information functions</bookmark_value>
</bookmark>
<h1 id="hd_id3147247" xml-lang="en-US">Information Functions</h1>
<paragraph id="par_id3147499" role="paragraph" xml-lang="en-US"><variable id="informationtext">This category contains the <emph>Information</emph> functions.</variable></paragraph>
<section id="howtoget">
<embed href="text/scalc/00/00000404.xhp#eikain"/>
</section>
<paragraph id="par_id3159128" role="paragraph" xml-lang="en-US">The data in the following table serves as the basis for some of the examples in the function descriptions:</paragraph>
<table id="tbl_id3157876">
  <tablerow>
    <tablecell>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3146885" role="tablehead" xml-lang="en-US" localize="false">C</paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3149944" role="tablehead" xml-lang="en-US" localize="false">D</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3150457" role="tablehead" xml-lang="en-US" localize="false"><emph>2</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3150024" role="tablecontent" xml-lang="en-US"><item type="input">x value</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3148725" role="tablecontent" xml-lang="en-US"><item type="input">y value</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3150480" role="tablehead" xml-lang="en-US" localize="false"><emph>3</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3148440" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">-5</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3148888" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">-3</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3153034" role="tablehead" xml-lang="en-US" localize="false"><emph>4</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3150139" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">-2</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3149542" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">0</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3149188" role="tablehead" xml-lang="en-US" localize="false"><emph>5</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3153329" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">-1</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3155257" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">1</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3145142" role="tablehead" xml-lang="en-US" localize="false"><emph>6</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3149956" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">0</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3145594" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">3</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3153113" role="tablehead" xml-lang="en-US" localize="false"><emph>7</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3148573" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">2</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3145166" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">4</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3157998" role="tablehead" xml-lang="en-US" localize="false"><emph>8</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3150018" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">4</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3150129" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">6</item></paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3145245" role="tablehead" xml-lang="en-US" localize="false"><emph>9</emph></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3148389" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">6</item></paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id3156068" role="tablecontent" xml-lang="en-US" localize="false"><item type="input">8</item></paragraph>
    </tablecell>
  </tablerow>
</table>
<sort order="asc" descendant="h2">
<section id="info">
<bookmark xml-lang="en-US" branch="index" id="bm_id3691824">
  <bookmark_value>INFO function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_INFO" id="bm_id5369426" localize="false"/>
<h2 id="hd_id5787224" xml-lang="en-US">INFO</h2>
<paragraph id="par_id1507309" role="paragraph" xml-lang="en-US">Returns specific information about the current working environment. The function receives a single text argument and returns data depending on that parameter.</paragraph>
<embed href="text/scalc/01/ful_func.xhp#func_volatile"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3928952" role="code" xml-lang="en-US">INFO("Type")</paragraph>
<paragraph id="par_id5206762" role="paragraph" xml-lang="en-US">The following table lists the values for the text parameter <item type="literal">Type</item> and the return values of the INFO function.</paragraph>
<table id="tbl_id1342204">
  <tablerow>
    <tablecell>
      <paragraph id="par_id5735953" role="tablehead" xml-lang="en-US">Value for "Type"<comment>Do not translate the text values in this column below</comment></paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id8360850" role="tablehead" xml-lang="en-US">Return value</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id9648731" role="tablecontent" xml-lang="en-US" localize="false">"osversion"</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id908841" role="tablecontent" xml-lang="en-US">Always "Windows (32-bit) NT 5.01", for compatibility reasons</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id8193914" role="tablecontent" xml-lang="en-US" localize="false">"system"</paragraph>
    </tablecell>
    <tablecell>
        <paragraph id="par_id9841608" role="tablecontent" xml-lang="en-US">The type of the operating system: <br/>"AIX" for Advanced Interactive Executive IBM computer operating systems<br/>"ANDROID" for Google mobile operating system<br/>"DRAGONFLY" for DragonFly operating system forked from FreeBSD<br/>"EMSCRIPTEN" for browser WebAssembly system<br/>"FREEBSD", "OPENBSD" or "NETBSD" for operating systems based on the Berkeley Software Distribution (BSD)<br/>"HAIKU" for BeOS compatible operating system<br/>"iOS" for Apple mobile operating system <br/>"LINUX" for GNU/Linux based operating systems<br/>"MACOSX" for Apple Mac OS X<br/>"SOLARIS" for Oracle Solaris operating system<br/>"WNT" for Microsoft Windows</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id2701803" role="tablecontent" xml-lang="en-US" localize="false">"release"</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id2136295" role="tablecontent" xml-lang="en-US">The product release identifier, for example "300m25(Build:9876)"</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id9200109" role="tablecontent" xml-lang="en-US" localize="false">"numfile"</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id4186223" role="tablecontent" xml-lang="en-US">Always 1, for compatibility reasons</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id5766472" role="tablecontent" xml-lang="en-US" localize="false">"recalc"</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id1491134" role="tablecontent" xml-lang="en-US">Current formula recalculation mode, either "Automatic" or "Manual" (localized into %PRODUCTNAME language)</paragraph>
    </tablecell>
  </tablerow>
</table>
<note id="par_id1161534">Other spreadsheet applications may accept localized values for the <item type="literal">Type</item> parameter, but %PRODUCTNAME Calc will only accept the English values.</note>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3994567" role="paragraph" xml-lang="en-US"><item type="input">=INFO("release")</item> returns the product release number of the %PRODUCTNAME in use.<comment>Do not translate "release"</comment></paragraph>
<paragraph id="par_id2873622" role="paragraph" xml-lang="en-US"><item type="input">=INFO(D5)</item> with cell <item type="literal">D5</item> containing a text string <item type="literal">system</item> returns the operation system type.<comment>Do not translate the hlp_literal system</comment></paragraph>
</section>
<section id="current">
<bookmark xml-lang="en-US" branch="index" id="bm_id3155625">
  <bookmark_value>CURRENT function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_AKTUELL" id="bm_id3145295" localize="false"/>
<h2 id="hd_id3155625" xml-lang="en-US">CURRENT</h2>
<paragraph id="par_id3157975" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_AKTUELL">This function returns the result to date of evaluating the formula of which it is a part (in other words the result as far as that evaluation has got). Its main use is together with the STYLE() function to apply selected styles to a cell depending on the cell contents.</ahelp></paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3150930" role="code" xml-lang="en-US">CURRENT()</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id5919064" role="paragraph" xml-lang="en-US"><item type="input">=1+2+CURRENT()</item></paragraph>
<paragraph id="par_id8751792" role="paragraph" xml-lang="en-US">The example returns 6. The formula is calculated from left to right as: 1 + 2 equals 3, giving the result to date when CURRENT() is encountered; CURRENT() therefore yields 3, which is added to the original 3 to give 6.</paragraph>
<paragraph id="par_id5863826" role="paragraph" xml-lang="en-US"><input>=A2+B2+STYLE(IF(CURRENT()&gt;10;"Red";"Default"))</input></paragraph>
<paragraph id="par_id7463911" role="paragraph" xml-lang="en-US">The example returns A2 + B2 (STYLE returns 0 here). If this sum is greater than 10, the style Red is applied to the cell. See the <emph>STYLE</emph> function for more explanation.</paragraph>
<paragraph id="par_id7318643" role="paragraph" xml-lang="en-US"><item type="input">="choo"&amp;CURRENT()</item></paragraph>
<paragraph id="par_id6019165" role="paragraph" xml-lang="en-US">The example returns choochoo.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectiontechinfo"/>
<embed href="text/scalc/01/common_func.xhp#notODFF"/>
<paragraph role="paragraph" id="par_id311640873986703" localize="false"><literal>ORG.OPENOFFICE.CURRENT</literal></paragraph>
</section>
<section id="formula">
<bookmark xml-lang="en-US" branch="index" id="bm_id3150688">
  <bookmark_value>FORMULA function</bookmark_value>
  <bookmark_value>formula cells;displaying formulas in other cells</bookmark_value>
  <bookmark_value>displaying;formulas at any position</bookmark_value>
</bookmark>
<comment>mw added "formula cells;" and "displaying;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_FORMEL" id="bm_id3155373" localize="false"/>
<h2 id="hd_id3150688" xml-lang="en-US">FORMULA</h2>
<paragraph id="par_id3158417" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_FORMEL">Displays the formula of a formula cell as a text string.</ahelp></paragraph>
<embed href="text/scalc/01/ful_func.xhp#func_volatile"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147535" role="code" xml-lang="en-US">FORMULA(Reference)</paragraph>
<paragraph id="par_id3014313" role="paragraph" xml-lang="en-US"><emph>Reference</emph> is a reference to a cell containing a formula.</paragraph>
<paragraph id="par_id8857081" role="paragraph" xml-lang="en-US">An invalid reference or a reference to a cell with no formula results in the error value #N/A.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3153179" role="paragraph" xml-lang="en-US">If cell A8 contains the formula <item type="input">=SUM(1;2;3)</item> then</paragraph>
<paragraph id="par_id3153923" role="paragraph" xml-lang="en-US"><item type="input">=FORMULA(A8)</item> returns the text =SUM(1;2;3).</paragraph>
</section>
<section id="isref">
<bookmark xml-lang="en-US" branch="index" id="bm_id3155409">
  <bookmark_value>ISREF function</bookmark_value>
  <bookmark_value>references;testing cell contents</bookmark_value>
  <bookmark_value>cell contents;testing for references</bookmark_value>
</bookmark>
<comment>mw added "references;" and "cell contents;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTBEZUG" id="bm_id3149774" localize="false"/>
<h2 id="hd_id3155409" xml-lang="en-US">ISREF</h2>
<paragraph id="par_id3153723" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTBEZUG">Tests if the argument is a reference.</ahelp> Returns TRUE if the argument is a reference, returns FALSE otherwise. When given a reference this function does not examine the value being referenced.<comment>i82565</comment></paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3149821" role="code" xml-lang="en-US">ISREF(Value)</paragraph>
<paragraph id="par_id3146152" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the value to be tested, to determine whether it is a reference.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154317" role="paragraph" xml-lang="en-US"><item type="input">=ISREF(C5)</item> returns the result TRUE because C5 is a valid reference.</paragraph>
<paragraph id="par_id9728072" role="paragraph" xml-lang="en-US"><item type="input">=ISREF("abcdef")</item> returns always FALSE because a text can never be a reference.</paragraph>
<paragraph id="par_id2131544" role="paragraph" xml-lang="en-US"><item type="input">=ISREF(4)</item> returns FALSE.</paragraph>
<paragraph id="par_id4295480" role="paragraph" xml-lang="en-US"><item type="input">=ISREF(INDIRECT("A6"))</item> returns TRUE, because INDIRECT is a function that returns a reference.</paragraph>
<paragraph id="par_id3626819" role="paragraph" xml-lang="en-US"><item type="input">=ISREF(ADDRESS(1; 1; 2;"Sheet2"))</item> returns FALSE, because ADDRESS is a function that returns a text, although it looks like a reference.</paragraph>
</section>
<section id="iserr">
<bookmark xml-lang="en-US" branch="index" id="bm_id3154812">
  <bookmark_value>ISERR function</bookmark_value>
  <bookmark_value>error codes;controlling</bookmark_value>
</bookmark>
<comment>mw added "error codes,"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTFEHL" id="bm_id3145081" localize="false"/>
<h2 id="hd_id3154812" xml-lang="en-US">ISERR</h2>
<paragraph id="par_id3149282" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTFEHL">Tests for error conditions, except the #N/A error value, and returns TRUE or FALSE.</ahelp></paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3156312" role="code" xml-lang="en-US">ISERR(Value)</paragraph>
<paragraph id="par_id3146857" role="paragraph" xml-lang="en-US"><emph>Value</emph> is any value or expression which is tested to see whether an error value other than #N/A is present.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3153276" role="paragraph" xml-lang="en-US"><item type="input">=ISERR(C8)</item> where cell C8 contains <item type="input">=1/0</item> returns TRUE, because 1/0 is an error.</paragraph>
<paragraph id="par_id8456984" role="paragraph" xml-lang="en-US"><item type="input">=ISERR(C9)</item> where cell C9 contains <item type="input">=NA()</item> returns FALSE, because ISERR() ignores the #N/A error.</paragraph>
</section>
<section id="iserror">
<bookmark xml-lang="en-US" branch="index" id="bm_id3147081">
  <bookmark_value>ISERROR function</bookmark_value>
  <bookmark_value>recognizing;general errors</bookmark_value>
</bookmark>
<comment>mw added "recognizing;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTFEHLER" id="bm_id3145206" localize="false"/>
<h2 id="hd_id3147081" xml-lang="en-US">ISERROR</h2>
<paragraph id="par_id3156316" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTFEHLER">Tests for error conditions, including the #N/A error value, and returns TRUE or FALSE.</ahelp></paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3153155" role="code" xml-lang="en-US">ISERROR(Value)</paragraph>
<paragraph id="par_id3154047" role="paragraph" xml-lang="en-US"><emph>Value</emph> is or refers to the value to be tested. ISERROR() returns TRUE if there is an error and FALSE if not.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3150256" role="paragraph" xml-lang="en-US"><item type="input">=ISERROR(C8)</item> where cell C8 contains <item type="input">=1/0</item> returns TRUE, because 1/0 is an error.</paragraph>
<paragraph id="par_id1889095" role="paragraph" xml-lang="en-US"><item type="input">=ISERROR(C9)</item> where cell C9 contains <item type="input">=NA()</item> returns TRUE.</paragraph>
</section>
<section id="iferror">
<bookmark xml-lang="en-US" branch="index" id="bm_id31470811">
  <bookmark_value>IFERROR function</bookmark_value>
  <bookmark_value>testing;general errors</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_IFERROR" id="bm_id31452061" localize="false"/>
<h2 id="hd_id31470811" xml-lang="en-US">IFERROR</h2>
<paragraph id="par_id31563161" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_IFERROR">Returns the value if the cell does not contains an error value, or the alternative value if it does.</ahelp></paragraph>
<embed href="text/scalc/00/avail_release.xhp#4.0"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id31531551" role="code" xml-lang="en-US">IFERROR(Value; Alternate_value)</paragraph>
<paragraph id="par_id31540471" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the value or expression to be returned if it is not equal or results in an error.</paragraph>
<paragraph id="par_id31540472" role="paragraph" xml-lang="en-US"><emph>Alternate_value</emph> is the value or expression to be returned if the expression or value of <emph>Value</emph> is equal or results in an error.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id31502561" role="paragraph" xml-lang="en-US"><item type="input">=IFERROR(C8;C9)</item> where cell C8 contains <item type="input">=1/0</item> returns the value of C9, because 1/0 is an error.</paragraph>
<paragraph id="par_id18890951" role="paragraph" xml-lang="en-US"><item type="input">=IFERROR(C8;C9)</item> where cell C8 contains <item type="input">13</item> returns 13, the value of C8, which is not an error.</paragraph>
</section>
<section id="isformula">
<bookmark xml-lang="en-US" branch="index" id="bm_id3153618">
  <bookmark_value>ISFORMULA function</bookmark_value>
  <bookmark_value>recognizing formula cells</bookmark_value>
  <bookmark_value>formula cells;recognizing</bookmark_value>
</bookmark>
<comment>mw inserted "recognizing..." and "formula cells;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTFORMEL" id="bm_id3154740" localize="false"/>
<h2 id="hd_id3153618">ISFORMULA</h2>
<paragraph id="par_id3149138" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTFORMEL">Returns TRUE if a cell is a formula cell.</ahelp></paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3143230" role="code" xml-lang="en-US">ISFORMULA(Reference)</paragraph>
<paragraph id="par_id3150150" role="paragraph" xml-lang="en-US"><emph>Reference</emph> indicates the reference to a cell in which a test will be performed to determine if it contains a formula.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3159182" role="paragraph" xml-lang="en-US"><item type="input">=ISFORMULA(C4)</item> returns FALSE if the cell C4 contains the number <item type="input">5</item>.</paragraph>
</section>
<section id="iseven">
<bookmark xml-lang="en-US" branch="index" id="bm_id3156048">
  <bookmark_value>ISEVEN function</bookmark_value>
  <bookmark_value>even integers</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTGERADE" id="bm_id3149430" localize="false"/>
<h2 id="hd_id3156048">ISEVEN</h2>
<paragraph id="par_id3149170" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTGERADE">Returns TRUE if the value is an even integer, or FALSE if the value is odd.</ahelp></paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3151203" role="code" xml-lang="en-US">ISEVEN(Value)</paragraph>
<paragraph id="par_id3150491" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the value to be checked.</paragraph>
<paragraph id="par_id3445844" role="paragraph" xml-lang="en-US">If Value is not an integer any digits after the decimal point are ignored. The sign of Value is also ignored.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3163813" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN(48)</item> returns TRUE</paragraph>
<paragraph id="par_id8378856" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN(33)</item> returns FALSE</paragraph>
<paragraph id="par_id7154759" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN(0)</item> returns TRUE</paragraph>
<paragraph id="par_id1912289" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN(-2.1)</item> returns TRUE</paragraph>
<paragraph id="par_id5627307" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN(3.999)</item> returns FALSE</paragraph><comment>see also ISODD</comment>
</section>
<section id="iseven_add">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149760">
  <bookmark_value>ISEVEN_ADD function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_AAI_FUNC_ISEVEN" id="bm_id3146094" localize="false"/>
<h2 id="hd_id3149760">ISEVEN_ADD</h2>
<paragraph id="par_id3147253" role="paragraph" xml-lang="en-US"><ahelp hid="HID_AAI_FUNC_ISEVEN">Tests for even numbers. Returns 1 if the number divided by 2 returns a whole number.</ahelp></paragraph>
<embed href="text/scalc/01/04060102.xhp#ADD_note"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3149202" role="code" xml-lang="en-US">ISEVEN_ADD(Number)</paragraph>
<paragraph id="par_id3151168" role="paragraph" xml-lang="en-US"><emph>Number</emph> is the number to be tested.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3153904" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN_ADD(5)</item> returns 0.</paragraph>
<paragraph id="par_id6238308" role="paragraph" xml-lang="en-US"><item type="input">=ISEVEN_ADD(A1)</item> returns 1 if cell A1 contains the number <item type="input">2</item>.</paragraph>
</section>
<section id="isnontext">
<bookmark xml-lang="en-US" branch="index" id="bm_id3154692">
  <bookmark_value>ISNONTEXT function</bookmark_value>
  <bookmark_value>cell contents;no text</bookmark_value>
</bookmark>
<comment>mw added "cell contents;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTKTEXT" id="bm_id3159342" localize="false"/>
<h2 id="hd_id3154692">ISNONTEXT</h2>
<paragraph id="par_id3155330" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTKTEXT">Tests if the cell contents are text or numbers, and returns FALSE if the contents are text.</ahelp></paragraph>
<paragraph id="par_id5719779" role="paragraph" xml-lang="en-US">If an error occurs, the function returns TRUE.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3148829" role="code" xml-lang="en-US">ISNONTEXT(Value)</paragraph>
<paragraph id="par_id3146992" role="paragraph" xml-lang="en-US"><emph>Value</emph> is any value or expression where a test is performed to determine whether it is a text or numbers or a Boolean value.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3149906" role="paragraph" xml-lang="en-US"><item type="input">=ISNONTEXT(D2)</item> returns FALSE if cell D2 contains the text <item type="input">abcdef</item>.</paragraph>
<paragraph id="par_id3150777" role="paragraph" xml-lang="en-US"><item type="input">=ISNONTEXT(D9)</item> returns TRUE if cell D9 contains the number <item type="input">8</item>.</paragraph>
</section>
<section id="isblank">
<bookmark xml-lang="en-US" branch="index" id="bm_id3159148">
  <bookmark_value>ISBLANK function</bookmark_value>
  <bookmark_value>blank cell contents</bookmark_value>
  <bookmark_value>empty cells; recognizing</bookmark_value>
</bookmark>
<comment>mw added "blank..." and "empty cells;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTLEER" id="bm_id3148940" localize="false"/>
<h2 id="hd_id3159148">ISBLANK</h2>
<paragraph id="par_id3148800" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTLEER">Returns TRUE if the reference to a cell is blank.</ahelp> This function is used to determine if the content of a cell is empty. A cell with a formula inside is not empty.</paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3158406" role="code" xml-lang="en-US">ISBLANK(Value)</paragraph>
<paragraph id="par_id3154212" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the content to be tested.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3147234" role="paragraph" xml-lang="en-US"><item type="input">=ISBLANK(D2)</item> returns FALSE as a result.</paragraph>
</section>
<section id="islogical">
<bookmark xml-lang="en-US" branch="index" id="bm_id3155356">
  <bookmark_value>ISLOGICAL function</bookmark_value>
  <bookmark_value>number formats;logical</bookmark_value>
  <bookmark_value>logical number formats</bookmark_value>
</bookmark>
<comment>mw added "number formats;" and "logical..."</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTLOG" id="bm_id3158424" localize="false"/>
<h2 id="hd_id3155356">ISLOGICAL</h2>
<paragraph id="par_id3148926" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTLOG">Tests for a logical value (TRUE or FALSE).</ahelp></paragraph>
<paragraph id="par_id3541062" role="paragraph" xml-lang="en-US">If an error occurs, the function returns FALSE.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3148918" role="code" xml-lang="en-US">ISLOGICAL(Value)</paragraph>
<paragraph id="par_id3146946" role="paragraph" xml-lang="en-US">Returns TRUE if <emph>Value</emph> is a logical value (TRUE or FALSE), and returns FALSE otherwise.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3166442" role="paragraph" xml-lang="en-US"><item type="input">=ISLOGICAL(99)</item> returns FALSE, because 99 is a number, not a logical value.</paragraph>
<paragraph id="par_id3556016" role="paragraph" xml-lang="en-US"><item type="input">=ISLOGICAL(ISNA(D4))</item> returns TRUE whatever the contents of cell D4, because ISNA() returns a logical value.</paragraph>
</section>
<section id="isna">
<bookmark xml-lang="en-US" branch="index" id="bm_id3153685">
  <bookmark_value>ISNA function</bookmark_value>
  <bookmark_value>#N/A error;recognizing</bookmark_value>
</bookmark>
<comment>mw added "#N/A ..."</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTNV" id="bm_id3159275" localize="false"/>
<h2 id="hd_id3153685">ISNA</h2>
<paragraph id="par_id3149105" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTNV">Returns TRUE if a cell contains the #N/A (value not available) error value.</ahelp></paragraph>
<paragraph id="par_id6018860" role="paragraph" xml-lang="en-US">If an error occurs, the function returns FALSE.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3153748" role="code" xml-lang="en-US">ISNA(Value)</paragraph>
<paragraph id="par_id3152884" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the value or expression to be tested.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154852" role="paragraph" xml-lang="en-US"><item type="input">=ISNA(D3)</item> returns FALSE as a result.</paragraph>
</section>
<section id="ifna">
<bookmark xml-lang="en-US" branch="index" id="bm_id31536851">
  <bookmark_value>IFNA function</bookmark_value>
  <bookmark_value>#N/A error;testing</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_IFNA" id="bm_id3159273" localize="false"/>
<h2 id="hd_id31536851">IFNA</h2>
<paragraph id="par_id31491051" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_IFNA">Returns the value if the cell does not contains the #N/A (value not available) error value, or the alternative value if it does.</ahelp></paragraph>
<embed href="text/scalc/00/avail_release.xhp#4.0"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id31537481" role="code" xml-lang="en-US">IFNA(Value; Alternate_value)</paragraph>
<paragraph id="par_id31528841" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the value or expression to be returned if it is not equal or results in an #N/A error.</paragraph>
<paragraph id="par_id31528842" role="paragraph" xml-lang="en-US"><emph>Alternate_value</emph> is the value or expression to be returned if the expression or value of <emph>Value</emph> is equal or results in an #N/A error.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id31548521" role="paragraph" xml-lang="en-US"><item type="input">=IFNA(D3;D4)</item> returns the value of D3 if D3 does not result in an #N/A error, or D4 if it does.</paragraph>
</section>
<section id="istext">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149426">
  <bookmark_value>ISTEXT function</bookmark_value>
  <bookmark_value>cell contents;text</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTTEXT" id="bm_id3148468" localize="false"/>
<h2 id="hd_id3149426">ISTEXT</h2>
<paragraph id="par_id3145368" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTTEXT">Returns TRUE if the cell contents refer to text.</ahelp></paragraph>
<paragraph id="par_id6779686" role="paragraph" xml-lang="en-US">If an error occurs, the function returns FALSE.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3148649" role="code" xml-lang="en-US">ISTEXT(Value)</paragraph>
<paragraph id="par_id3150417" role="paragraph" xml-lang="en-US"><emph>Value</emph> is a value, number, Boolean value, or an error value to be tested.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3144756" role="paragraph" xml-lang="en-US"><item type="input">=ISTEXT(D9)</item> returns TRUE if cell D9 contains the text <item type="input">abcdef</item>.</paragraph>
<paragraph id="par_id3148416" role="paragraph" xml-lang="en-US"><item type="input">=ISTEXT(C3)</item> returns FALSE if cell C3 contains the number <item type="input">3</item>.</paragraph>
</section>
<section id="isodd">
<bookmark xml-lang="en-US" branch="index" id="bm_id3156034">
  <bookmark_value>ISODD function</bookmark_value>
  <bookmark_value>odd integers</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTUNGERADE" id="bm_id3149298" localize="false"/>
<h2 id="hd_id3156034">ISODD</h2>
<paragraph id="par_id3155920" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTUNGERADE">Returns TRUE if the value is odd, or FALSE if the number is even.</ahelp></paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3151375" role="code" xml-lang="en-US">ISODD(value)</paragraph>
<paragraph id="par_id3155139" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the value to be checked.</paragraph>
<paragraph id="par_id9027680" role="paragraph" xml-lang="en-US">If Value is not an integer any digits after the decimal point are ignored. The sign of Value is also ignored.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3155345" role="paragraph" xml-lang="en-US"><item type="input">=ISODD(33)</item> returns TRUE</paragraph>
<paragraph id="par_id9392986" role="paragraph" xml-lang="en-US"><item type="input">=ISODD(48)</item> returns FALSE</paragraph>
<paragraph id="par_id5971251" role="paragraph" xml-lang="en-US"><item type="input">=ISODD(3.999)</item> returns TRUE</paragraph>
<paragraph id="par_id4136478" role="paragraph" xml-lang="en-US"><item type="input">=ISODD(-3.1)</item> returns TRUE</paragraph><comment>see also ISEVEN</comment>
</section>
<section id="isodd_add">
<bookmark xml-lang="en-US" branch="index" id="bm_id3153939">
  <bookmark_value>ISODD_ADD function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_AAI_FUNC_ISODD" id="bm_id3149927" localize="false"/>
<h2 id="hd_id3153939">ISODD_ADD</h2>
<paragraph id="par_id3153538" role="paragraph" xml-lang="en-US"><ahelp hid="HID_AAI_FUNC_ISODD">Returns TRUE (1) if the number does not return a whole number when divided by 2.</ahelp></paragraph>
<embed href="text/scalc/01/04060102.xhp#ADD_note"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3149485" role="code" xml-lang="en-US">ISODD_ADD(Number)</paragraph>
<paragraph id="par_id3153315" role="paragraph" xml-lang="en-US"><emph>Number</emph> is the number to be tested.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154793" role="paragraph" xml-lang="en-US"><item type="input">=ISODD_ADD(5)</item> returns 1.</paragraph>
</section>
<section id="isnumber">
<bookmark xml-lang="en-US" branch="index" id="bm_id3148688">
  <bookmark_value>ISNUMBER function</bookmark_value>
  <bookmark_value>cell contents;numbers</bookmark_value>
</bookmark>
<comment>mw added "cell contents;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ISTZAHL" id="bm_id3149587" localize="false"/>
<h2 id="hd_id3148688">ISNUMBER</h2>
<paragraph id="par_id3154618" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ISTZAHL">Returns TRUE if the value refers to a number.</ahelp></paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3150595" role="code" xml-lang="en-US">ISNUMBER(Value)</paragraph>
<paragraph id="par_id3150351" role="paragraph" xml-lang="en-US"><emph>Value</emph> is any expression to be tested to determine whether it is a number or text.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3155614" role="paragraph" xml-lang="en-US"><item type="input">=ISNUMBER(C3)</item> returns TRUE if the cell C3 contains the number <item type="input">4</item>.</paragraph>
<paragraph id="par_id3154417" role="paragraph" xml-lang="en-US"><item type="input">=ISNUMBER(C2)</item> returns FALSE if the cell C2 contains the text <item type="input">abcdef</item>.</paragraph>
</section>
<section id="n">
<bookmark xml-lang="en-US" branch="index" id="bm_id3153694">
  <bookmark_value>N function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_N" id="bm_id3153786" localize="false"/>
<h2 id="hd_id3153694">N</h2>
<paragraph id="par_id3150405" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_N">Returns the numeric value of the given parameter. Returns 0 if parameter is text or FALSE.</ahelp></paragraph>
<paragraph id="par_id9115573" role="paragraph" xml-lang="en-US">If an error occurs the function returns the error value.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3153883" role="code" xml-lang="en-US">N(Value)</paragraph>
<paragraph id="par_id3151101" role="paragraph" xml-lang="en-US"><emph>Value</emph> is the parameter to be converted into a number. N() returns the numeric value if it can. It returns the logical values TRUE and FALSE as 1 and 0 respectively. It returns text as 0.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154117" role="paragraph" xml-lang="en-US"><item type="input">=N(123)</item> returns 123</paragraph>
<paragraph id="par_id2337717" role="paragraph" xml-lang="en-US"><item type="input">=N(TRUE())</item> returns 1</paragraph>
<paragraph id="par_id3153781" role="paragraph" xml-lang="en-US"><item type="input">=N(FALSE())</item> returns 0</paragraph>
<paragraph id="par_id3154670" role="paragraph" xml-lang="en-US"><item type="input">=N("abc")</item> returns 0</paragraph>
<paragraph id="par_id3519089" role="paragraph" xml-lang="en-US">=N(1/0) returns #DIV/0!</paragraph>
</section>
<section id="na">
<bookmark xml-lang="en-US" branch="index" id="bm_id3156275">
  <bookmark_value>NA function</bookmark_value>
  <bookmark_value>#N/A error;assigning to a cell</bookmark_value>
</bookmark>
<comment>mw added "#N/A error;"</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_NV" id="bm_id3154569" localize="false"/>
<h2 id="hd_id3156275">NA</h2>
<paragraph id="par_id3156161" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_NV">Returns the error value #N/A.</ahelp></paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3149563" role="code" xml-lang="en-US">NA()</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154481" role="paragraph" xml-lang="en-US"><item type="input">=NA()</item> converts the contents of the cell into #N/A.</paragraph>
</section>
<section id="type">
<bookmark xml-lang="en-US" branch="index" id="bm_id3151255">
  <bookmark_value>TYPE function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_TYP" id="bm_id3146127" localize="false"/>
<h2 id="hd_id3151255" xml-lang="en-US">TYPE</h2>
<paragraph id="par_id3155900" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_TYP">Returns the type of value, where 1 = number, 2 = text, 4 = Boolean value, 8 = formula, 16 = error value, 64 = array.</ahelp></paragraph>
<embed href="text/shared/00/00000001.xhp#wahr"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3148400" role="code" xml-lang="en-US">TYPE(Value)</paragraph>
<paragraph id="par_id3150830" role="paragraph" xml-lang="en-US"><emph>Value</emph> is a specific value for which the data type is determined.</paragraph>
<h3 id="hd_id3154363" xml-lang="en-US">Example (see example table above)</h3>
<paragraph id="par_id3153357" role="paragraph" xml-lang="en-US"><item type="input">=TYPE(C2)</item> returns 2 as a result.</paragraph>
<paragraph id="par_id3148980" role="paragraph" xml-lang="en-US"><item type="input">=TYPE(D9)</item> returns 1 as a result.</paragraph>
</section>
<section id="cell">
<bookmark xml-lang="en-US" branch="index" id="bm_id3155509">
  <bookmark_value>CELL function</bookmark_value>
  <bookmark_value>cell information</bookmark_value>
  <bookmark_value>information on cells</bookmark_value>
</bookmark>
<comment>mw added two entries</comment>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ZELLE" id="bm_id3159412" localize="false"/>
<h2 id="hd_id3155509" xml-lang="en-US">CELL</h2>
<paragraph id="par_id3153196" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ZELLE">Returns information on address, formatting or contents of a cell.</ahelp></paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147355" role="code" xml-lang="en-US">CELL("InfoType" [; Reference])</paragraph>
<paragraph id="par_id3154716" role="paragraph" xml-lang="en-US"><emph>InfoType</emph> is the character string that specifies the type of information. The character string is always in English. Upper or lower case is optional.</paragraph>
<table id="tbl_id3152470">
  <tablerow>
    <tablecell>
      <paragraph id="par_id3150636" role="tablehead" xml-lang="en-US">InfoType</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3149344" role="tablehead" xml-lang="en-US">Meaning</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3153266" role="code" xml-lang="en-US" localize="false">COL</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3156204" role="tablecontent" xml-lang="en-US">Returns the number of the referenced column.</paragraph>
      <paragraph id="par_id3150094" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("COL";D2)</item> returns 4.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3151276" role="code" xml-lang="en-US" localize="false">ROW</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3147583" role="tablecontent" xml-lang="en-US">Returns the number of the referenced row.</paragraph>
      <paragraph id="par_id3151222" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("ROW";D2)</item> returns 2.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3159217" role="code" xml-lang="en-US" localize="false">SHEET</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3151201" role="tablecontent" xml-lang="en-US">Returns the number of the referenced sheet.</paragraph>
      <paragraph id="par_id3149169" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("Sheet";Sheet3.D2)</item> returns 3.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3149431" role="code" xml-lang="en-US" localize="false">ADDRESS</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3156054" role="tablecontent" xml-lang="en-US">Returns the absolute address of the referenced cell.</paragraph>
      <paragraph id="par_id3154136" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("ADDRESS";D2)</item> returns $D$2.</paragraph>
      <paragraph id="par_id3159198" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("ADDRESS";Sheet3.D2)</item> returns $Sheet3.$D$2.</paragraph>
      <paragraph id="par_id3150245" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("ADDRESS";'X:\dr\test.ods'#$Sheet1.D2)</item> returns 'file:///X:/dr/test.ods'#$Sheet1.$D$2.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3146811" role="code" xml-lang="en-US" localize="false">FILENAME</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3151328" role="tablecontent" xml-lang="en-US">Returns the file name and the sheet number of the referenced cell.</paragraph>
      <paragraph id="par_id3148896" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("FILENAME";D2)</item> returns 'file:///X:/dr/own.ods'#$Sheet1, if the formula in the current document X:\dr\own.ods is located in Sheet1.</paragraph>
      <paragraph id="par_id3155144" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("FILENAME";'X:\dr\test.ods'#$Sheet1.D2)</item> returns 'file:///X:/dr/test.ods'#$Sheet1.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3151381" role="code" xml-lang="en-US" localize="false">COORD</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3151004" role="tablecontent" xml-lang="en-US">Returns the complete cell address in Lotus™ notation.</paragraph>
      <paragraph id="par_id3159104" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("COORD"; D2)</item> returns $A:$D$2.</paragraph>
      <paragraph id="par_id3163720" role="tablecontent" xml-lang="en-US"><item type="input">=CELL("COORD"; Sheet3.D2)</item> returns $C:$D$2.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3155910" role="code" xml-lang="en-US" localize="false">CONTENTS</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3156041" role="tablecontent" xml-lang="en-US">Returns the contents of the referenced cell, without any formatting.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3151069" role="code" xml-lang="en-US" localize="false">TYPE</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3155344" role="tablecontent" xml-lang="en-US">Returns the type of cell contents.</paragraph>
      <paragraph id="par_id3145217" role="tablecontent" xml-lang="en-US">b = blank. empty cell</paragraph>
      <paragraph id="par_id3155176" role="tablecontent" xml-lang="en-US">l = label. Text, result of a formula as text</paragraph>
      <paragraph id="par_id3147280" role="tablecontent" xml-lang="en-US">v = value. Value, result of a formula as a number</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3156348" role="code" xml-lang="en-US" localize="false">WIDTH</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3154920" role="tablecontent" xml-lang="en-US">Returns the width of the referenced column. The unit is the number of zeros (0) that fit into the column in the default text and the default size.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3152355" role="code" xml-lang="en-US" localize="false">PREFIX</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3154230" role="tablecontent" xml-lang="en-US">Returns the alignment of the referenced cell.</paragraph>
      <paragraph id="par_id3155946" role="tablecontent" xml-lang="en-US">' = align left or left-justified</paragraph>
      <paragraph id="par_id3147220" role="tablecontent" xml-lang="en-US">" = align right</paragraph>
      <paragraph id="par_id3149038" role="tablecontent" xml-lang="en-US">^ = centered</paragraph>
      <paragraph id="par_id3153129" role="tablecontent" xml-lang="en-US">\ = repeating (currently inactive)</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3154406" role="code" xml-lang="en-US" localize="false">PROTECT</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3145127" role="tablecontent" xml-lang="en-US">Returns the status of the cell protection for the cell.</paragraph>
      <paragraph id="par_id3155794" role="tablecontent" xml-lang="en-US">1 = cell is protected</paragraph>
      <paragraph id="par_id3155072" role="tablecontent" xml-lang="en-US">0 = cell is not protected</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3156178" role="code" xml-lang="en-US" localize="false">FORMAT</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3150220" role="tablecontent" xml-lang="en-US">Returns a character string that indicates the number format.</paragraph>
      <paragraph id="par_id3153824" role="tablecontent" xml-lang="en-US">, = number with thousands separator</paragraph>
      <paragraph id="par_id3153837" role="tablecontent" xml-lang="en-US">F = number without thousands separator</paragraph>
      <paragraph id="par_id3150318" role="tablecontent" xml-lang="en-US">C = currency format</paragraph>
      <paragraph id="par_id3153168" role="tablecontent" xml-lang="en-US">S = exponential representation, for example, 1.234+E56</paragraph>
      <paragraph id="par_id3153515" role="tablecontent" xml-lang="en-US">P = percentage</paragraph>
      <paragraph id="par_id3154375" role="tablecontent" xml-lang="en-US">In the above formats, the number of decimal places after the decimal separator is given as a number. Example: the number format #,##0.0 returns ,1 and the number format 00.000% returns P3</paragraph>
      <paragraph id="par_id3150575" role="tablecontent" xml-lang="en-US">D1 = MMM-D-YY, MM-D-YY and similar formats</paragraph>
      <paragraph id="par_id3150589" role="tablecontent" xml-lang="en-US">D2 = DD-MM</paragraph>
      <paragraph id="par_id3151034" role="tablecontent" xml-lang="en-US">D3 = MM-YY</paragraph>
      <paragraph id="par_id3156371" role="tablecontent" xml-lang="en-US">D4 = DD-MM-YYYY HH:MM:SS</paragraph>
      <paragraph id="par_id3157881" role="tablecontent" xml-lang="en-US">D5 = MM-DD</paragraph>
      <paragraph id="par_id3157894" role="tablecontent" xml-lang="en-US">D6 = HH:MM:SS AM/PM</paragraph>
      <paragraph id="par_id3154068" role="tablecontent" xml-lang="en-US">D7 = HH:MM AM/PM</paragraph>
      <paragraph id="par_id3150286" role="tablecontent" xml-lang="en-US">D8 = HH:MM:SS</paragraph>
      <paragraph id="par_id3145756" role="tablecontent" xml-lang="en-US">D9 = HH:MM</paragraph>
      <paragraph id="par_id3145768" role="tablecontent" xml-lang="en-US">G = All other formats</paragraph>
      <paragraph id="par_id3153375" role="tablecontent" xml-lang="en-US">- (Minus) at the end = negative numbers are formatted in color</paragraph>
      <paragraph id="par_id3155545" role="tablecontent" xml-lang="en-US">() (brackets) at the end = there is an opening bracket in the format code</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3154594" role="code" xml-lang="en-US" localize="false">COLOR</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3152922" role="tablecontent" xml-lang="en-US">Returns 1, if negative values have been formatted in color, otherwise 0.</paragraph>
    </tablecell>
  </tablerow>
  <tablerow>
    <tablecell>
        <paragraph id="par_id3145563" role="code" xml-lang="en-US" localize="false">PARENTHESES</paragraph>
    </tablecell>
    <tablecell>
      <paragraph id="par_id3156072" role="tablecontent" xml-lang="en-US">Returns 1 if the format code contains an opening bracket (, otherwise 0.</paragraph>
    </tablecell>
  </tablerow>
</table>
<paragraph id="par_id3156090" role="paragraph" xml-lang="en-US"><emph>Reference</emph> (list of options) is the position of the cell to be examined. If <emph>Reference</emph> is a range, the cell moves to the top left of the range. If <emph>Reference</emph> is missing, $[officename] Calc uses the position of the cell in which this formula is located. Microsoft Excel uses the reference of the cell in which the cursor is positioned.</paragraph>
</section>
</sort>
<section id="relatedtopics">
<embed href="text/scalc/01/04060100.xhp#drking"/>
</section>
</body>
</helpdocument>
