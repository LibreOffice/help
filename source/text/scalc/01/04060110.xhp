<?xml version="1.0" encoding="UTF-8"?>
<helpdocument version="1.0">
<!--
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
-->

<meta>
  <topic id="textscalc0104060110xml" indexer="include">
    <title id="tit" xml-lang="en-US">Text Functions</title>
    <filename>/text/scalc/01/04060110.xhp</filename>
  </topic>
</meta>

<body>

<bookmark xml-lang="en-US" branch="index" id="bm_id3145389">
  <bookmark_value>text in cells; functions</bookmark_value>
  <bookmark_value>functions; text functions</bookmark_value>
  <bookmark_value>Function Wizard;text</bookmark_value>
</bookmark>


<h1 id="hd_id3145389"><variable id="head_text"><link href="text/scalc/01/04060110.xhp" name="Text Functions">Text Functions</link></variable></h1>
<paragraph id="par_id3152986" role="paragraph" xml-lang="en-US"><variable id="texttext">This section contains descriptions of the <emph>Text</emph> functions. </variable></paragraph>

<section id="howtoget">
<embed href="text/scalc/00/00000404.xhp#eikatext"/>
</section>

<section id="double_quotation_marks_in_formulas">
<bookmark xml-lang="en-US" branch="index" id="bm_id331624453577057">
  <bookmark_value>using double quotation marks in formulas</bookmark_value>
  <bookmark_value>formulas; using double quotation marks</bookmark_value>
</bookmark>

<h2 id="hd_id291624454173529">Using double quotation marks in formulas</h2>

<paragraph role="paragraph" id="par_id891624454058773">To include a text string in a formula, place the text string between two double quotation marks (") and Calc takes the characters in the string without attempting to interpret them. For example, the formula <input>="Hello world!"</input> displays the text string <literal>Hello world!</literal> in the cell, with no surrounding double quotation marks.</paragraph>

<paragraph role="paragraph" id="par_id461624454425320">The more complex formula <input>=CONCATENATE("Life is really simple, "; "but we insist on making it complicated "; "(Confucius).")</input> concatenates three individual strings in double quotation marks, outputting <literal>Life is really simple, but we insist on making it complicated (Confucius).</literal></paragraph>

<paragraph role="paragraph" id="par_id711624454477483">To place a literal double quotation mark within a string inside a formula, two methods can be used:</paragraph>

<list type="ordered">
    <listitem>
        <paragraph id="par_id541624454496424" role="listitem">You can "escape" the double quotation mark with an additional double quotation mark, and Calc treats the escaped double quotation mark as a literal value. For example, the formula <input>="My name is ""John Doe""."</input> outputs the string <literal>My name is "John Doe".</literal> Another simple example is the formula <input>=UNICODE("""")</input> which returns <literal>34</literal>, the decimal value of the Unicode quotation mark character (U+0022) — here the first and fourth double quotation marks indicate the beginning and end of the string, while the second double quotation mark escapes the third.</paragraph>
    </listitem>
    <listitem>
        <paragraph id="par_id21624454513641" role="listitem">You can use the CHAR function or the UNICHAR function to insert a double quotation mark. For example, the formula <input>=UNICHAR(34) &amp; "The Catcher in the Rye" &amp; UNICHAR(34) &amp; " is a famous book by J. D. Salinger."</input> displays the string <literal>"The Catcher in the Rye" is a famous book by J. D. Salinger.</literal></paragraph>
    </listitem>
</list>

<paragraph role="paragraph" id="par_id401624454547945">Be aware that Calc's AutoCorrect function may modify double quotation marks. AutoCorrect should not change the double quotation marks within formula cells but may change those used in non-formula cells containing text. For example, if you copy a string that is surrounded by some other form of typographical double quotation marks, such as the left double quotation mark (U+201C) and the right double quotation mark (U+201D), and then paste into a formula cell, an error may result. Open the <emph>Double Quotes</emph> area of the <menuitem>Tools - AutoCorrect Options - Localized Options</menuitem> dialog to set the characters used to automatically correct the start and end typographical double quotation marks. Uncheck the <menuitem>Replace</menuitem> toggle button to disable the feature.</paragraph>

</section>

<sort order="asc" descendant="h2">

<section id="arabic">
  <embed href="text/scalc/01/func_arabic.xhp#func_arabic"/>
</section>

<section id="asc">
  <embed href="text/scalc/01/func_asc.xhp#func_asc"/>
</section>

<section id="bahttext">
<bookmark xml-lang="en-US" branch="index" id="bm_id9323709">
  <bookmark_value>BAHTTEXT function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BAHTTEXT" id="bm_id744346" localize="false"/><comment>i66350</comment>
<h2 id="hd_id6695455">BAHTTEXT</h2>
<paragraph id="par_id354014" role="paragraph" xml-lang="en-US">Converts a number to Thai text, including the Thai currency names.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id8780785" role="code" xml-lang="en-US">BAHTTEXT(Number)</paragraph>
<paragraph id="par_id1539353" role="paragraph" xml-lang="en-US"> <emph>Number</emph> is any number. "Baht" is appended to the integral part of the number, and "Satang" is appended to the decimal part of the number.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3289284" role="paragraph" xml-lang="en-US"> <item type="input">=BAHTTEXT(12.65)</item> returns a string in Thai characters with the meaning of "Twelve Baht and sixty five Satang".</paragraph>
    <embed href="text/scalc/01/common_func.xhp#sectiontechinfo"/>
    <embed href="text/scalc/01/common_func.xhp#notODFF"/>
    <paragraph role="paragraph" id="par_id341640873986703" localize="false"><literal>COM.MICROSOFT.BAHTTEXT</literal></paragraph>
</section>

<section id="base">
<bookmark xml-lang="en-US" branch="index" id="bm_id3153072">
  <bookmark_value>BASE function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_BASIS" id="bm_id3150957" localize="false"/>
<bookmark xml-lang="en-US" branch="index" id="bm_id3156399">
  <bookmark_value>decimal system; converting to</bookmark_value>
</bookmark>
<h2 id="hd_id3153072">BASE</h2>
<paragraph id="par_id3153289" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_BASIS">Converts a positive integer to a specified base into a text from the <link href="text/shared/00/00000005.xhp#number_system" name="numbering system">numbering system</link>.</ahelp> The digits 0-9 and the letters A-Z are used.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3155743" role="code" xml-lang="en-US">BASE(Number; Radix [; MinimumLength])</paragraph>
<paragraph id="par_id3151339" role="paragraph" xml-lang="en-US"> <emph>Number</emph> is the positive integer to be converted.</paragraph>
<paragraph id="par_id3159262" role="paragraph" xml-lang="en-US"> <emph>Radix</emph> indicates the base of the numeral system. It may be any positive integer between 2 and 36.</paragraph>
<paragraph id="par_id3148746" role="paragraph" xml-lang="en-US"> <emph>MinimumLength</emph> (optional) determines the minimum length of the character sequence that has been created. If the text is shorter than the indicated minimum length, zeros are added to the left of the string.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3156399" role="paragraph" xml-lang="en-US"> <item type="input">=BASE(17;10;4)</item> returns 0017 in the decimal system.</paragraph>
<bookmark xml-lang="en-US" branch="index" id="bm_id3157871">
  <bookmark_value>binary system; converting to</bookmark_value>
</bookmark>

<paragraph id="par_id3157871" role="paragraph" xml-lang="en-US"> <item type="input">=BASE(17;2)</item> returns 10001 in the binary system.</paragraph>
<bookmark xml-lang="en-US" branch="index" id="bm_id3145226">
  <bookmark_value>hexadecimal system; converting to</bookmark_value>
</bookmark>

<paragraph id="par_id3145226" role="paragraph" xml-lang="en-US"> <item type="input">=BASE(255;16;4)</item> returns 00FF in the hexadecimal system.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionseealso"/>
<paragraph role="paragraph" id="par_id991655560817321"><link href="text/scalc/01/04060110.xhp#decimal" name="decimal">DECIMAL</link></paragraph>
</section>

<section id="char">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149321">
  <bookmark_value>CHAR function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ZEICHEN" id="bm_id3159128" localize="false"/>

<h2 id="hd_id3149321">CHAR</h2>
<paragraph id="par_id3149150" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ZEICHEN">Converts a number into a character according to the current code table.</ahelp> The number can be a two-digit or three-digit integer number.</paragraph>
<embed href="text/scalc/00/00000004.xhp#codes"/>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3145634" role="code" xml-lang="en-US">CHAR(Number)</paragraph>
<paragraph id="par_id3155906" role="paragraph" xml-lang="en-US"> <emph>Number</emph> is a number between 1 and 255 representing the code value for the character.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3149890" role="paragraph" xml-lang="en-US"> <item type="input">=CHAR(100)</item> returns the character d.</paragraph>
<paragraph id="par_id0907200910283297" role="paragraph" xml-lang="en-US">="abc" &amp; CHAR(10) &amp; "def" inserts a newline character into the string.</paragraph>
</section>

<section id="clean">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149009">
  <bookmark_value>CLEAN function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_SAEUBERN" id="bm_id3148729" localize="false"/>

<h2 id="hd_id3149009">CLEAN</h2>
<paragraph id="par_id3150482" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_SAEUBERN">All non-printing characters are removed from the string.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147472" role="code" xml-lang="en-US">CLEAN("Text")</paragraph>
<paragraph id="par_id3150695" role="paragraph" xml-lang="en-US"> <emph>Text</emph> refers to the text from which to remove all non-printable characters.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph role="paragraph" id="par_id581621538151600"><input>=LEN(CLEAN(CHAR(7) &amp; "LibreOffice Calc" &amp; CHAR(8)))</input> returns 16, showing that the CLEAN function removes the non-printable Unicode U+0007 ("BEL") and U+0008 ("BS") characters at the beginning and end of the string argument. CLEAN does not remove spaces.</paragraph>

</section>

<section id="code">
<bookmark xml-lang="en-US" branch="index" id="bm_id3155498">
  <bookmark_value>CODE function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_CODE" id="bm_id3159084" localize="false"/>

<h2 id="hd_id3155498">CODE</h2>
<paragraph id="par_id3152770" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_CODE">Returns a numeric code for the first character in a text string.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3149188" role="code" xml-lang="en-US">CODE("Text")</paragraph>
<paragraph id="par_id3154383" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text for which the code of the first character is to be found.</paragraph>
<embed href="text/scalc/00/00000004.xhp#codes"/>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3159209" role="paragraph" xml-lang="en-US"> <item type="input">=CODE("Hieronymus")</item> returns 72, <item type="input">=CODE("hieroglyphic")</item> returns 104.</paragraph>
<note id="par_id3150280">The code used here does not refer to ASCII, but to the code table currently loaded.</note>
</section>

<section id="concatenate">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149688">
  <bookmark_value>CONCATENATE function</bookmark_value>
</bookmark>
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_VERKETTEN" id="bm_id3153084" localize="false"/>
<h2 id="hd_id3149688">CONCATENATE</h2>
<paragraph id="par_id3154524" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_VERKETTEN">Combines several text strings into one string.</ahelp></paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3155954" role="code" xml-lang="en-US">CONCATENATE(<embedvar href="text/scalc/01/ful_func.xhp#string255_1" markup="keep"/>)</paragraph>
<paragraph role="paragraph" id="par_id781585222554150"><emph>String 1[; String 2][; … ;[String 255]]</emph> are strings or references to cells containing strings.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3150008" role="paragraph" xml-lang="en-US"> <item type="input">=CONCATENATE("Good ";"Morning ";"Mrs. ";"Doe")</item> returns: Good Morning Mrs. Doe.</paragraph>
</section>

<section id="decimal">
<bookmark xml-lang="en-US" branch="index" id="bm_id3145166">
  <bookmark_value>DECIMAL function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_DEZIMAL" id="bm_id3150338" localize="false"/>

<h2 id="hd_id3145166">DECIMAL</h2>
<paragraph id="par_id3156361" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_DEZIMAL">Converts text that represents a number in a <link href="text/shared/00/00000005.xhp#number_system" name="numeral system">numeral system</link> with the given base radix to a positive integer.</ahelp> The radix must be in the range 2 to 36. Spaces and tabs are ignored. The <emph>Text</emph> field is not case-sensitive.</paragraph>
<paragraph id="par_id3157994" role="paragraph" xml-lang="en-US">If the radix is 16, a leading x or X or 0x or 0X, and an appended h or H, are disregarded. If the radix is 2, an appended b or B is disregarded. Other characters that do not belong to the numeral system generate an error.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3154328" role="code" xml-lang="en-US">DECIMAL("Text"; Radix)</paragraph>
<paragraph id="par_id3150128" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text to be converted.</paragraph>
<paragraph id="par_id3145241" role="paragraph" xml-lang="en-US"> <emph>Radix</emph> indicates the base of the numeral system. It may be any positive integer between 2 and 36.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3145355" role="paragraph" xml-lang="en-US"> <item type="input">=DECIMAL("17";10)</item> returns 17.</paragraph>
<paragraph id="par_id3155622" role="paragraph" xml-lang="en-US"> <item type="input">=DECIMAL("FACE";16)</item> returns 64206.</paragraph>
<paragraph id="par_id3151015" role="paragraph" xml-lang="en-US"> <item type="input">=DECIMAL("0101";2)</item> returns 5.</paragraph>
<embed href="text/scalc/01/common_func.xhp#sectionseealso"/>
<paragraph role="paragraph" id="par_id421655560837244"><link href="text/scalc/01/04060110.xhp#base" name="base">BASE</link></paragraph>
</section>

<section id="dollar">
<bookmark xml-lang="en-US" branch="index" id="bm_id3148402">
  <bookmark_value>DOLLAR function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_DM" id="bm_id3149532" localize="false"/>

<h2 id="hd_id3148402">DOLLAR</h2>
<paragraph id="par_id3153049" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_DM">Converts a number to a string representing the amount in the currency format, rounded to a specified decimal places, using the decimal separator that corresponds to the <link href="text/shared/optionen/01140000.xhp" name="current locale setting">current locale setting</link>.</ahelp> In the <item type="literal">Value</item> field enter the number to be converted. Optionally, you may enter the number of decimal places in the <item type="literal">Decimals</item> field. If no value is specified, all numbers in currency format will be displayed with two decimal places.</paragraph>
<paragraph id="par_id3151280" role="paragraph" xml-lang="en-US">You set the currency format in your system settings.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3154188" role="code" xml-lang="en-US">DOLLAR(Value [; Decimals])</paragraph>
<paragraph id="par_id3145299" role="paragraph" xml-lang="en-US"> <emph>Value</emph> is a number, a reference to a cell containing a number, or a formula which returns a number.</paragraph>
<paragraph id="par_id3145629" role="paragraph" xml-lang="en-US"> <emph>Decimals</emph> is the optional number of decimal places.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3153546" role="paragraph" xml-lang="en-US"> <item type="input">=DOLLAR(255)</item> returns $255.00 for the English (USA) locale and USD (dollar) currency; ￥255.00 for the Japanese locale and JPY (yen) currency; or 255,00 € for the German (Germany) locale and EUR (euro) currency.</paragraph>
<paragraph id="par_id3154635" role="paragraph" xml-lang="en-US"> <item type="input">=DOLLAR(367.456;2)</item> returns $367.46.</paragraph>
</section>

<section id="exact">
<bookmark xml-lang="en-US" branch="index" id="bm_id3150685">
  <bookmark_value>EXACT function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_IDENTISCH" id="bm_id3155081" localize="false"/>

<h2 id="hd_id3150685">EXACT</h2>
<paragraph id="par_id3158413" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_IDENTISCH">Compares two text strings and returns TRUE if they are identical.</ahelp> This function is case-sensitive.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3148594" role="code" xml-lang="en-US">EXACT("Text1"; "Text2")</paragraph>
<paragraph id="par_id3153224" role="paragraph" xml-lang="en-US"> <emph>Text1</emph> refers to the first text to compare.</paragraph>
<paragraph id="par_id3148637" role="paragraph" xml-lang="en-US"> <emph>Text2</emph> is the second text to compare.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3156263" role="paragraph" xml-lang="en-US"> <item type="input">=EXACT("microsystems";"Microsystems")</item> returns FALSE.</paragraph>
</section>

<section id="find">
<bookmark xml-lang="en-US" branch="index" id="bm_id3152589">
  <bookmark_value>FIND function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_FINDEN" id="bm_id3147482" localize="false"/>

<h2 id="hd_id3152589">FIND</h2>
<paragraph id="par_id3146149" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_FINDEN">Returns the position of a string of text within another string.</ahelp>You can also define where to begin the search. The search term can be a number or any string of characters. The search is case-sensitive.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3083452" role="code" xml-lang="en-US">FIND("FindText"; "Text" [; Position])</paragraph>
<paragraph id="par_id3150608" role="paragraph" xml-lang="en-US"> <emph>FindText</emph> refers to the text to be found.</paragraph>
<paragraph id="par_id3152374" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text where the search takes place.</paragraph>
<paragraph id="par_id3152475" role="paragraph" xml-lang="en-US"> <emph>Position</emph> (optional) is the position in the text from which the search starts.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3156375" role="paragraph" xml-lang="en-US"> <item type="input">=FIND(76;998877665544)</item> returns 6.</paragraph>
</section>

<section id="fixed">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149268">
  <bookmark_value>FIXED function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_FEST" id="bm_id3149450" localize="false"/>

<h2 id="hd_id3149268">FIXED</h2>
<paragraph role="paragraph" id="par_id641617285271044" xml-lang="en-US"><ahelp hid="HID_FUNC_FEST">Returns a number as text with a specified number of decimal places and optional thousands separators.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147567" role="code" xml-lang="en-US">FIXED(Number; [Decimals = 2 [; NoThousandsSeparators = FALSE]])</paragraph>

<paragraph id="par_id3151272" role="paragraph" xml-lang="en-US"> <emph>Number</emph> is rounded to <literal>Decimals</literal> places (after the decimal separator) and the result formatted as text, using <link href="text/shared/optionen/01140000.xhp" name="current locale setting">locale-specific settings</link>.</paragraph>
<paragraph id="par_id3156322" role="paragraph" xml-lang="en-US"> <emph>Decimals</emph> (optional) refers to the number of decimal places to be displayed. If <literal>Decimals</literal> is negative, <literal>Number</literal> is rounded to ABS(<literal>Decimals</literal>) places to the left from the decimal point. If <literal>Decimals</literal> is a fraction, it is truncated actually ignoring what is the closest integer.</paragraph>
<paragraph id="par_id3150877" role="paragraph" xml-lang="en-US"> <emph>NoThousandsSeparators</emph> (optional) determines whether the thousands separator is used.  If it is <literal>TRUE</literal> or non-zero, then group separators are omitted from the resulting string. If the parameter is equal to 0 or if it is missing altogether, the thousands separators of your <link href="text/shared/optionen/01140000.xhp" name="current locale setting">current locale setting</link> are displayed.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3145208" role="paragraph" xml-lang="en-US"> <item type="input">=FIXED(1234567.89;3)</item> returns 1,234,567.890 as a text string. </paragraph>
<paragraph id="par_id5282143" role="paragraph" xml-lang="en-US"> <item type="input">=FIXED(123456.789;;TRUE)</item> returns 123456.79 as a text string.</paragraph>
<paragraph role="paragraph" id="par_id21617202293406" xml-lang="en-US"> <item type="input">=FIXED(12345.6789;-2)</item> returns 12,300 as a text string.</paragraph>
<paragraph role="paragraph" id="par_id161617202295558" xml-lang="en-US"> <item type="input">=FIXED(12134567.89;-3;1)</item> returns 12135000 as a text string.</paragraph>
<paragraph role="paragraph" id="par_id451617286696878" xml-lang="en-US"> <item type="input">=FIXED(12345.789;3/4)</item> returns 12,346 as a text string.</paragraph>
<paragraph role="paragraph" id="par_id371617286698199" xml-lang="en-US"> <item type="input">=FIXED(12345.789;8/5)</item> returns 12,345.8 as a text string.</paragraph>
</section>

<section id="jis">
  <embed href="text/scalc/01/func_jis.xhp#func_jis"/>
</section>

<section id="left">
<bookmark xml-lang="en-US" branch="index" id="bm_id3147083">
  <bookmark_value>LEFT function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_LINKS" id="bm_id3154645" localize="false"/>

<h2 id="hd_id3147083">LEFT</h2>
<paragraph id="par_id3153622" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_LINKS">Returns the first character or characters of a text.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3146786" role="code" xml-lang="en-US">LEFT("Text" [; Number])</paragraph>
<paragraph id="par_id3147274" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text where the initial partial words are to be determined.</paragraph>
<paragraph id="par_id3153152" role="paragraph" xml-lang="en-US"> <emph>Number</emph> (optional) specifies the number of characters for the start text. If this parameter is not defined, one character is returned.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3149141" role="paragraph" xml-lang="en-US"> <item type="input">=LEFT("output";3)</item> returns “out”.</paragraph>
</section>

<section id="leftb">
<bookmark xml-lang="en-US" branch="index" id="bm_id2947083">
  <bookmark_value>LEFTB function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_LEFTB" id="bm_id2954645" localize="false"/>

<h2 id="hd_id2947083"><variable id="leftbvar"><link href="text/scalc/01/04060110.xhp#leftb" name="LEFTB">LEFTB</link></variable></h2>
<paragraph id="par_id2953622" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_LEFTB">Returns the first characters of a DBCS text.</ahelp></paragraph>
<embed href="text/scalc/00/avail_release.xhp#4.2"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id2946786" role="code" xml-lang="en-US">LEFTB("Text" [; Number_bytes])</paragraph>
<paragraph id="par_id2947274" role="paragraph" xml-lang="en-US"><emph>Text</emph> is the text where the initial partial words are to be determined.</paragraph>
<paragraph id="par_id2953152" role="paragraph" xml-lang="en-US"><emph>Number_bytes</emph> (optional) specifies the number of characters you want LEFTB to extract, based on bytes. If this parameter is not defined, one character is returned.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id2949141" role="paragraph" xml-lang="en-US"><item type="input">=LEFTB("中国";1)</item> returns " " (1 byte is only half a DBCS character and a space character is returned instead).</paragraph>
<paragraph id="par_id2949151" role="paragraph" xml-lang="en-US"><item type="input">=LEFTB("中国";2)</item> returns "中" (2 bytes constitute one complete DBCS character).</paragraph>
<paragraph id="par_id2949161" role="paragraph" xml-lang="en-US"><item type="input">=LEFTB("中国";3)</item> returns "中 " (3 bytes constitute one DBCS character and a half; the last character returned is therefore a space character).</paragraph>
<paragraph id="par_id2949171" role="paragraph" xml-lang="en-US"><item type="input">=LEFTB("中国";4)</item> returns "中国" (4 bytes constitute two complete DBCS characters).</paragraph>
<paragraph id="par_id2949181" role="paragraph" xml-lang="en-US"><item type="input">=LEFTB("office";3)</item> returns "off" (3 non-DBCS characters each consisting of 1 byte).</paragraph>
</section>

<section id="len">
<bookmark xml-lang="en-US" branch="index" id="bm_id3156110">
  <bookmark_value>LEN function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_LAENGE" id="bm_id3154050" localize="false"/>

<h2 id="hd_id3156110">LEN</h2>
<paragraph id="par_id3150147" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_LAENGE">Returns the length of a string including spaces.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3154063" role="code" xml-lang="en-US">LEN("Text")</paragraph>
<paragraph id="par_id3146894" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text whose length is to be determined.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3156008" role="paragraph" xml-lang="en-US"> <item type="input">=LEN("Good Afternoon")</item> returns 14.</paragraph>
<paragraph id="par_id3154300" role="paragraph" xml-lang="en-US"> <item type="input">=LEN(12345.67)</item> returns 8.</paragraph>
</section>

<section id="lenb">
<bookmark xml-lang="en-US" branch="index" id="bm_id2956110">
  <bookmark_value>LENB function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_LENB" id="bm_id2954050" localize="false"/>

<h2 id="hd_id2956110"><variable id="lenbvar"><link href="text/scalc/01/04060110.xhp#lenb" name="LENB">LENB</link></variable></h2>
<paragraph id="par_id2950147" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_LENB">For double-byte character set (DBCS) languages, returns the number of bytes used to represent the characters in a text string.</ahelp></paragraph>
<embed href="text/scalc/00/avail_release.xhp#4.2"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id2954063" role="code" xml-lang="en-US">LENB("Text")</paragraph>
<paragraph id="par_id2946894" role="paragraph" xml-lang="en-US"><emph>Text</emph> is the text whose length is to be determined.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id2956018" role="paragraph" xml-lang="en-US"><item type="input">LENB("中")</item> returns 2 (1 DBCS character consisting of 2 bytes).</paragraph>
<paragraph id="par_id2956028" role="paragraph" xml-lang="en-US"><item type="input">LENB("中国")</item> returns 4 (2 DBCS characters each consisting of 2 bytes).</paragraph>
<paragraph id="par_id2956038" role="paragraph" xml-lang="en-US"><item type="input">LENB("office")</item> returns 6 (6 non-DBCS characters each consisting of 1 byte).</paragraph>
<paragraph id="par_id2956008" role="paragraph" xml-lang="en-US"> <item type="input">=LENB("Good Afternoon")</item> returns 14.</paragraph>
<paragraph id="par_id2954300" role="paragraph" xml-lang="en-US"> <item type="input">=LENB(12345.67)</item> returns 8.</paragraph>
</section>

<section id="lower">
<bookmark xml-lang="en-US" branch="index" id="bm_id3153983">
  <bookmark_value>LOWER function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_KLEIN" id="bm_id3151173" localize="false"/>

<h2 id="hd_id3153983">LOWER</h2>
<paragraph id="par_id3152791" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_KLEIN">Converts all uppercase letters in a text string to lowercase.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3150121" role="code" xml-lang="en-US">LOWER("Text")</paragraph>
<paragraph id="par_id3153910" role="paragraph" xml-lang="en-US"> <emph>Text</emph> refers to the text to be converted.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3155329" role="paragraph" xml-lang="en-US"> <item type="input">=LOWER("Sun")</item> returns sun.</paragraph>
</section>

<section id="mid">
<bookmark xml-lang="en-US" branch="index" id="bm_id3154589">
  <bookmark_value>MID function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_TEIL" id="bm_id3155392" localize="false"/>

<h2 id="hd_id3154589">MID</h2>
<paragraph id="par_id3154938" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_TEIL">Returns a text string of a text. The parameters specify the starting position and the number of characters.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3150526" role="code" xml-lang="en-US">MID("Text"; Start; Number)</paragraph>
<paragraph id="par_id3148820" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text containing the characters to extract.</paragraph>
<paragraph id="par_id3150774" role="paragraph" xml-lang="en-US"> <emph>Start</emph> is the position of the first character in the text to extract.</paragraph>
<paragraph id="par_id3153063" role="paragraph" xml-lang="en-US"> <emph>Number</emph> specifies the number of characters in the part of the text.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3158407" role="paragraph" xml-lang="en-US"> <item type="input">=MID("office";2;2)</item> returns ff.</paragraph>
</section>

<section id="midb">
<bookmark xml-lang="en-US" branch="index" id="bm_id2954589">
  <bookmark_value>MIDB function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_MIDB" id="bm_id2955392" localize="false"/>

<h2 id="hd_id2954589"><variable id="midbvar"><link href="text/scalc/01/04060110.xhp#midb" name="MIDB">MIDB</link></variable></h2>
<paragraph id="par_id2954938" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_MIDB">Returns a text string of a DBCS text. The parameters specify the starting position and the number of characters.</ahelp></paragraph>
<embed href="text/scalc/00/avail_release.xhp#4.2"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id2950526" role="code" xml-lang="en-US">MIDB("Text"; Start; Number_bytes)</paragraph>
<paragraph id="par_id2948820" role="paragraph" xml-lang="en-US"><emph>Text</emph> is the text containing the characters to extract.</paragraph>
<paragraph id="par_id2950774" role="paragraph" xml-lang="en-US"><emph>Start</emph> is the position of the first character in the text to extract.</paragraph>
<paragraph id="par_id2953063" role="paragraph" xml-lang="en-US"><emph>Number_bytes</emph> specifies the number of characters MIDB will return from text, in bytes.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id2958417" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";1;0)</item> returns "" (0 bytes is always an empty string).</paragraph>
<paragraph id="par_id2958427" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";1;1)</item> returns " " (1 byte is only half a DBCS character and therefore the result is a space character).</paragraph>
<paragraph id="par_id2958437" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";1;2)</item> returns "中" (2 bytes constitute one complete DBCS character).</paragraph>
<paragraph id="par_id2958447" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";1;3)</item> returns "中 " (3 bytes constitute one and a half DBCS character; the last byte results in a space character).</paragraph>
<paragraph id="par_id2958457" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";1;4)</item> returns "中国" (4 bytes constitute two complete DBCS characters).</paragraph>
<paragraph id="par_id2958467" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";2;1)</item> returns " " (byte position 2 is not at the beginning of a character in a DBCS string; 1 space character is returned).</paragraph>
<paragraph id="par_id2958477" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";2;2)</item> returns " " (byte position 2 points to the last half of the first character in the DBCS string; the 2 bytes asked for therefore constitutes the last half of the first character and the first half of the second character in the string; 2 space characters are therefore returned).</paragraph>
<paragraph id="par_id2958487" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";2;3)</item> returns " 国" (byte position 2 is not at the beginning of a character in a DBCS string; a space character is returned for byte position 2).</paragraph>
<paragraph id="par_id2958497" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";3;1)</item> returns " " (byte position 3 is at the beginning of a character in a DBCS string, but 1 byte is only half a DBCS character and a space character is therefore returned instead).</paragraph>
<paragraph id="par_id2958507" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("中国";3;2)</item> returns "国" (byte position 3 is at the beginning of a character in a DBCS string, and 2 bytes constitute one DBCS character).</paragraph>
<paragraph id="par_id2958517" role="paragraph" xml-lang="en-US"><item type="input">=MIDB("office";2;3)</item> returns "ffi" (byte position 2 is at the beginning of a character in a non-DBCS string, and 3 bytes of a non-DBCS string constitute 3 characters).</paragraph>
</section>

<section id="proper">
<bookmark xml-lang="en-US" branch="index" id="bm_id3159143">
  <bookmark_value>PROPER function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_GROSS2" id="bm_id3154897" localize="false"/>

<h2 id="hd_id3159143">PROPER</h2>
<paragraph id="par_id3149768" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_GROSS2">Capitalizes the first letter in all words of a text string.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3154260" role="code" xml-lang="en-US">PROPER("Text")</paragraph>
<paragraph id="par_id3147509" role="paragraph" xml-lang="en-US"> <emph>Text</emph> refers to the text to be converted.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3155364" role="paragraph" xml-lang="en-US"> <item type="input">=PROPER("the document foundation")</item> returns The Document Foundation.</paragraph>
</section>

<section id="regex">
<embed href="text/scalc/01/func_regex.xhp#func_regex"/>
</section>

<section id="replace">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149171">
  <bookmark_value>REPLACE function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_ERSETZEN" id="bm_id3149990" localize="false"/>

<h2 id="hd_id3149171">REPLACE</h2>
<paragraph id="par_id3148925" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_ERSETZEN">Replaces part of a text string with a different text string.</ahelp> This function can be used to replace both characters and numbers (which are automatically converted to text). The result of the function is always displayed as text. If you intend to perform further calculations with a number which has been replaced by text, you will need to convert it back to a number using the <link href="text/scalc/01/04060110.xhp" name="VALUE">VALUE</link> function.</paragraph>
<paragraph id="par_id3158426" role="paragraph" xml-lang="en-US">Any text containing numbers must be enclosed in quotation marks if you do not want it to be interpreted as a number and automatically converted to text.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147286" role="code" xml-lang="en-US">REPLACE("Text"; Position; Length; "NewText")</paragraph>
<paragraph id="par_id3149797" role="paragraph" xml-lang="en-US"> <emph>Text</emph> refers to text of which a part will be replaced.</paragraph>
<paragraph id="par_id3166451" role="paragraph" xml-lang="en-US"> <emph>Position</emph> refers to the position within the text where the replacement will begin.</paragraph>
<paragraph id="par_id3156040" role="paragraph" xml-lang="en-US"> <emph>Length</emph> is the number of characters in <emph>Text</emph> to be replaced.</paragraph>
<paragraph id="par_id3159188" role="paragraph" xml-lang="en-US"> <emph>NewText</emph> refers to the text which replaces <emph>Text</emph>.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154096" role="paragraph" xml-lang="en-US"> <item type="input">=REPLACE("1234567";1;1;"444")</item> returns "444234567". One character at position 1 is replaced by the complete <item type="literal">NewText</item>.</paragraph>
</section>

<section id="rept">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149741">
  <bookmark_value>REPT function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_WIEDERHOLEN" id="bm_id3155582" localize="false"/>

<h2 id="hd_id3149741">REPT</h2>
<paragraph id="par_id3153748" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_WIEDERHOLEN">Repeats a character string by the given <emph>number</emph> of copies.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3150494" role="code" xml-lang="en-US">REPT("Text"; Number)</paragraph>
<paragraph id="par_id3154859" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text to be repeated.</paragraph>
<paragraph id="par_id3150638" role="paragraph" xml-lang="en-US"> <emph>Number</emph> is the number of repetitions.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3148626" role="paragraph" xml-lang="en-US"> <item type="input">=REPT("Good morning";2)</item> returns Good morningGood morning.</paragraph>

<tip id="par_id381626381556310">Refer to the <link href="https://wiki.documentfoundation.org/Documentation/Calc_Functions/REPT" name="REPT_Wiki">REPT</link> wiki page for more details about this function.</tip></section>

<section id="right">
<bookmark xml-lang="en-US" branch="index" id="bm_id3149805">
  <bookmark_value>RIGHT function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_RECHTS" id="bm_id3154602" localize="false"/>

<h2 id="hd_id3149805">RIGHT</h2>
<paragraph id="par_id3145375" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_RECHTS">Returns the last character or characters of a text.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3154344" role="code" xml-lang="en-US">RIGHT("Text" [; Number])</paragraph>
<paragraph id="par_id3149426" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text of which the right part is to be determined.</paragraph>
<paragraph id="par_id3153350" role="paragraph" xml-lang="en-US"> <emph>Number</emph> (optional) is the number of characters from the right part of the text. If this parameter is not defined, one character is returned.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3151132" role="paragraph" xml-lang="en-US"> <item type="input">=RIGHT("Sun";2)</item> returns un.</paragraph>
</section>

<section id="rightb">
<bookmark xml-lang="en-US" branch="index" id="bm_id2949805">
  <bookmark_value>RIGHTB function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_RIGHTB" id="bm_id2954602" localize="false"/>

<h2 id="hd_id2949805"><variable id="rightbvar"><link href="text/scalc/01/04060110.xhp#rightb" name="RIGHTB">RIGHTB</link></variable></h2>
<paragraph id="par_id2945375" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_RIGHTB">Returns the last character or characters of a text with double bytes characters sets (DBCS).</ahelp></paragraph>
<embed href="text/scalc/00/avail_release.xhp#4.2"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id2954344" role="code" xml-lang="en-US">RIGHTB("Text" [; Number_bytes])</paragraph>
<paragraph id="par_id2949426" role="paragraph" xml-lang="en-US"><emph>Text</emph> is the text of which the right part is to be determined.</paragraph>
<paragraph id="par_id2953350" role="paragraph" xml-lang="en-US"><emph>Number_bytes</emph> (optional) specifies the number of characters you want RIGHTB to extract, based on bytes. If this parameter is not defined, one byte is returned.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id2951132" role="paragraph" xml-lang="en-US"><item type="input">RIGHTB("中国";1)</item> returns " " (1 byte is only half a DBCS character and a space character is returned instead).</paragraph>
<paragraph id="par_id2951142" role="paragraph" xml-lang="en-US"><item type="input">RIGHTB("中国";2)</item> returns "国" (2 bytes constitute one complete DBCS character).</paragraph>
<paragraph id="par_id2951152" role="paragraph" xml-lang="en-US"><item type="input">RIGHTB("中国";3)</item> returns " 国" (3 bytes constitute one half DBCS character and one whole DBCS character; a space is returned for the first half).</paragraph>
<paragraph id="par_id2951162" role="paragraph" xml-lang="en-US"><item type="input">RIGHTB("中国";4)</item> returns "中国" (4 bytes constitute two complete DBCS characters).</paragraph>
<paragraph id="par_id2951172" role="paragraph" xml-lang="en-US"><item type="input">RIGHTB("office";3)</item> returns "ice" (3 non-DBCS characters each consisting of 1 byte).</paragraph>
</section>

<section id="roman">
  <embed href="text/scalc/01/func_roman.xhp#func_roman"/>
</section>

<section id="search">
<bookmark xml-lang="en-US" branch="index" id="bm_id3151005">
  <bookmark_value>SEARCH function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_SUCHEN" id="bm_id3149484" localize="false"/>

<h2 id="hd_id3151005">SEARCH</h2>
<paragraph id="par_id3148692" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_SUCHEN">Returns the position of a text segment within a character string.</ahelp> You can set the start of the search as an option. The search text can be a number or any sequence of characters. The search is not case-sensitive. If the text is not found, returns error 519 (#VALUE).</paragraph>
<embed href="text/shared/00/00000001.xhp#regex"/>
<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3154671" role="code" xml-lang="en-US">SEARCH("FindText"; "Text" [; Position])</paragraph>
<paragraph id="par_id3146080" role="paragraph" xml-lang="en-US"> <emph>FindText</emph> is the text to be searched for.</paragraph>
<paragraph id="par_id3154111" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text where the search will take place.</paragraph>
<paragraph id="par_id3149559" role="paragraph" xml-lang="en-US"> <emph>Position</emph> (optional) is the position in the text where the search is to start.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3154564" role="paragraph" xml-lang="en-US"> <item type="input">=SEARCH(54;998877665544)</item> returns 10.</paragraph>
</section>

<section id="substitute">
<bookmark xml-lang="en-US" branch="index" id="bm_id3154830">
  <bookmark_value>SUBSTITUTE function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_WECHSELN" id="bm_id3147090" localize="false"/>

<h2 id="hd_id3154830">SUBSTITUTE</h2>
<paragraph id="par_id3153698" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_WECHSELN">Substitutes new text for old text in a string.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147582" role="code" xml-lang="en-US">SUBSTITUTE("Text"; "SearchText"; "NewText" [; Occurrence])</paragraph>
<paragraph id="par_id3153675" role="paragraph" xml-lang="en-US"> <emph>Text</emph> is the text in which text segments are to be exchanged.</paragraph>
<paragraph id="par_id3156155" role="paragraph" xml-lang="en-US"> <emph>SearchText </emph>is the text segment that is to be replaced (a number of times).</paragraph>
<paragraph id="par_id3145779" role="paragraph" xml-lang="en-US"> <emph>NewText</emph> is the text that is to replace the text segment.</paragraph>
<paragraph id="par_id3150348" role="paragraph" xml-lang="en-US"> <emph>Occurrence</emph> (optional) indicates which occurrence of the search text is to be replaced. If this parameter is missing the search text is replaced throughout.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3150412" role="paragraph" xml-lang="en-US"> <item type="input">=SUBSTITUTE("123123123";"3";"abc")</item> returns 12abc12abc12abc.</paragraph>
<paragraph id="par_id3154915" role="paragraph" xml-lang="en-US"> <item type="input">=SUBSTITUTE("123123123";"3";"abc";2)</item> returns 12312abc123.</paragraph>
</section>

<section id="t">
<bookmark xml-lang="en-US" branch="index" id="bm_id3148977">
  <bookmark_value>T function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_T" id="bm_id3156051" localize="false"/>

<h2 id="hd_id3148977">T</h2>
<paragraph id="par_id3154359" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_T">This function returns the target text, or a blank text string if the target is not text.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3155871" role="code" xml-lang="en-US">T(Value)</paragraph>
<paragraph id="par_id3154726" role="paragraph" xml-lang="en-US">If <emph>Value</emph> is a text string or refers to a text string, T returns that text string; otherwise it returns a blank text string.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3151062" role="paragraph" xml-lang="en-US"> <item type="input">=T(12345)</item> returns an empty string. </paragraph>
<paragraph id="par_id4650105" role="paragraph" xml-lang="en-US"> <item type="input">=T("12345")</item> returns the string 12345.</paragraph>
</section>

<section id="text">
<bookmark xml-lang="en-US" branch="index" id="bm_id3147132">
  <bookmark_value>TEXT function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_TEXT" id="bm_id3156426" localize="false"/>

<h2 id="hd_id3147132">TEXT</h2>
<paragraph id="par_id3147213" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_TEXT">Converts a value into text according to a given format.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3147377" role="code" xml-lang="en-US">TEXT(Value; Format)</paragraph>
<paragraph id="par_id3147389" role="paragraph" xml-lang="en-US"> <emph>Value</emph> is the value (numerical or textual) to be converted.</paragraph>
<paragraph id="par_id3156167" role="paragraph" xml-lang="en-US"> <emph>Format</emph> is the text which defines the format. Use decimal and thousands separators according to the language set in the cell format.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id9044770" role="paragraph" xml-lang="en-US"> <item type="input">=TEXT(12.34567;"###.##")</item> returns the text 12.35</paragraph>
<paragraph id="par_id3674123" role="paragraph" xml-lang="en-US"> <item type="input">=TEXT(12.34567;"000.00")</item> returns the text 012.35</paragraph>
<paragraph id="par_id3674124" role="paragraph" xml-lang="en-US"> <item type="input">=TEXT("xyz";"=== @ ===")</item> returns the text === xyz ===</paragraph>

<tip id="par_id3145364">See also <link href="text/shared/01/05020301.xhp" name="Number format codes">Number format codes</link>: custom format codes defined by the user.</tip>
</section>

<section id="trim">
<bookmark xml-lang="en-US" branch="index" id="bm_id3151039">
  <bookmark_value>TRIM function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_GLAETTEN" id="bm_id3150584" localize="false"/>

<h2 id="hd_id3151039">TRIM</h2>
<paragraph id="par_id3157888" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_GLAETTEN">Removes spaces from a string, leaving only a single space character between words.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3151349" role="code" xml-lang="en-US">TRIM("Text")</paragraph>
<paragraph id="par_id3151362" role="paragraph" xml-lang="en-US"> <emph>Text</emph> refers to text in which spaces are to be removed.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3156074" role="paragraph" xml-lang="en-US"> <item type="input">=TRIM(" hello      world ")</item> returns hello world without leading and trailing spaces and with single space between words.</paragraph>
</section>

<section id="unichar">
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_UNICHAR" id="bm_id0907200904004674" localize="false"/>
<bookmark xml-lang="en-US" branch="index" id="bm_id0907200904030935">
  <bookmark_value>UNICHAR function</bookmark_value>
</bookmark>


<h2 id="hd_id0907200904022525">UNICHAR</h2>
<paragraph id="par_id0907200904022538" role="paragraph" xml-lang="en-US"><ahelp hid=".">Converts a code number into a Unicode character or letter.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id0907200904123753" role="paragraph" xml-lang="en-US"><item type="literal">UNICHAR(number)</item></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id090720090412378" role="paragraph" xml-lang="en-US">=UNICHAR(169) returns the Copyright character <emph>©</emph>.</paragraph>
<tip id="par_id050220170755399756">See also the UNICODE() function.</tip>
</section>

<section id="unicode">
<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_UNICODE" id="bm_id0907200904011330" localize="false"/>
<bookmark xml-lang="en-US" branch="index" id="bm_id0907200904033543">
  <bookmark_value>UNICODE function</bookmark_value>
</bookmark>


<h2 id="hd_id0907200904022588">UNICODE</h2>
<paragraph id="par_id0907200904022594" role="paragraph" xml-lang="en-US"><ahelp hid=".">Returns the numeric code for the first Unicode character in a text string.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id0907200904123846" role="paragraph" xml-lang="en-US"><item type="literal">UNICODE("Text")</item></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id0907200904123919" role="paragraph" xml-lang="en-US">=UNICODE("©") returns the Unicode number 169 for the Copyright character.</paragraph>
<tip id="par_id050220170755393174">See also the UNICHAR() function.</tip>
</section>

<section id="upper">
<bookmark xml-lang="en-US" branch="index" id="bm_id3145178">
  <bookmark_value>UPPER function</bookmark_value>
</bookmark>

<bookmark xml-lang="en-US" branch="hid/SC_HID_FUNC_GROSS" id="bm_id3145189" localize="false"/>

<h2 id="hd_id3145178">UPPER</h2>
<paragraph id="par_id3162905" role="paragraph" xml-lang="en-US"><ahelp hid="HID_FUNC_GROSS">Converts the string specified in the <emph>text</emph> field to uppercase.</ahelp></paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionsyntax"/>
<paragraph id="par_id3148539" role="code" xml-lang="en-US">UPPER("Text")</paragraph>
<paragraph id="par_id3148496" role="paragraph" xml-lang="en-US"> <emph>Text</emph> refers to the lower case letters you want to convert to upper case.</paragraph>

<embed href="text/scalc/01/common_func.xhp#sectionexample"/>
<paragraph id="par_id3146757" role="paragraph" xml-lang="en-US"> <item type="input">=UPPER("Good Morning")</item> returns GOOD MORNING.</paragraph>
</section>

<section id="value">
<embed href="text/scalc/01/func_value.xhp#func_value"/>
</section>

<section id="webservice">
    <embed href="text/scalc/01/func_webservice.xhp#webservicefuncheader"/>
</section>
<section id="filterxml">
    <embed href="text/scalc/01/func_webservice.xhp#filterxmlfuncheader"/>
</section>
<section id="encodeurl">
    <embed href="text/scalc/01/func_webservice.xhp#encodeurlfuncheader"/>
</section>
</sort>

<section id="relatedtopics">
<embed href="text/scalc/01/04060100.xhp#drking"/>
</section>
</body>

</helpdocument>
